import numpy as np
from Configure import NUM_AGENTS, TIME_STAMP, mu_c, Gamma, w_1, w_2
import torch
import copy
class Server:
    def __init__(self, id, comp, capacity=None):
        self.id = id
        self.task_list = []
        self.comp = comp
        self.capacity = capacity
        self.service_list = []
        self.service_migrate = []
        self.service_start = []
        self.service_end = []
    
class Remote_cloud:
    def __init__(self, id, comp):
        self.id = id
        self.vms = [VM(comp) for _ in range(3)]
        self.comp = comp
        self.task_list = [] 

class VM:
    def __init__(self, comp):
        self.task_list = []
        self.comp = comp
        
np.random.seed(1)

server_capacity = np.array([197, 182, 182, 192, 188])
comp = np.array([5335, 5340, 5390, 5126, 5341])
service_size = np.array([55, 57, 59, 53, 54])
request_list3 = np.array([2, 0, 1, 1, 1, 2, 1, 1, 2, 0, 0, 2, 2, 0, 0, 0, 2, 1, 2, 1, 0, 2,
       0, 1, 0, 1, 2, 1, 1, 2, 2, 2, 1, 1, 0, 0, 2, 0, 2, 2, 0, 1, 2, 1,
       1, 1, 1, 0, 1, 0, 1, 2, 2, 2, 1, 0, 1, 0, 2, 0, 0, 2, 0, 2, 1, 2,
       1, 2, 0, 2, 2, 0, 2, 1, 1, 1, 0, 2, 2, 1, 2, 2, 0, 0, 1, 1, 2, 2,
       0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 1,
       0, 0, 1, 1, 2, 0, 0, 0, 2, 0, 1, 2, 2, 0, 2, 1, 1, 0, 0, 0, 2, 0,
       2, 2, 0, 1, 2, 1, 0, 1, 1, 2, 0, 0, 2, 0, 2, 2, 1, 2, 2, 0, 1, 0,
       0, 0, 2, 0, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 0, 0, 2,
       1, 2, 1, 0, 1, 1, 1, 1, 2, 0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 1, 2, 0,
       1, 1])
request_list5 = np.array([3, 1, 0, 1, 2, 1, 0, 4, 3, 1, 2, 1, 3, 3, 3, 0, 0, 4, 1, 1, 4, 2,
       3, 2, 2, 2, 2, 4, 3, 3, 1, 0, 0, 1, 0, 2, 2, 4, 1, 4, 0, 0, 4, 2,
       3, 1, 1, 4, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 4, 3, 4, 0, 1, 0, 2,
       2, 2, 1, 3, 0, 3, 2, 0, 2, 1, 2, 1, 0, 4, 0, 4, 2, 2, 1, 1, 3, 1,
       1, 1, 4, 3, 1, 1, 4, 1, 2, 0, 1, 3, 2, 4, 3, 3, 0, 2, 4, 3, 4, 2,
       2, 4, 0, 0, 4, 2, 3, 2, 0, 2, 1, 1, 3, 1, 1, 3, 1, 0, 4, 3, 2, 4,
       3, 0, 1, 3, 2, 2, 0, 4, 3, 2, 3, 4, 3, 2, 4, 4, 0, 0, 4, 3, 1, 3,
       3, 2, 4, 2, 4, 4, 4, 1, 0, 0, 3, 1, 2, 0, 0, 2, 2, 1, 4, 4, 3, 3,
       0, 3, 4, 2, 0, 2, 4, 1, 1, 2, 0, 3, 4, 1, 0, 1, 3, 4, 4, 4, 0, 4,
       2, 0])
task_type = np.array([2, 0, 3, 4, 3, 1, 0, 2, 1, 4, 4, 0, 0, 4, 0, 3, 2, 4, 3, 2, 0, 4,
       3, 3, 1, 0, 4, 4, 0, 0, 3, 1, 2, 1, 1, 0, 1, 1, 3, 0, 1, 4, 3, 2,
       3, 0, 0, 1, 2, 4, 1, 3, 2, 1, 4, 4, 1, 3, 2, 1, 2, 2, 0, 3, 1, 3,
       4, 3, 3, 1, 2, 0, 1, 0, 4, 2, 2, 4, 3, 0, 0, 3, 2, 0, 0, 3, 3, 0,
       1, 4, 0, 4, 4, 4, 3, 3, 1, 1, 1, 2, 4, 4, 0, 1, 0, 2, 3, 3, 1, 1,
       1, 1, 2, 2, 2, 3, 3, 0, 4, 2, 1, 3, 3, 1, 1, 4, 1, 4, 4, 3, 4, 1,
       1, 4, 3, 4, 0, 2, 4, 3, 3, 1, 1, 3, 2, 3, 2, 1, 0, 0, 2, 2, 2, 2,
       0, 3, 2, 0, 1, 4, 3, 1, 3, 2, 3, 0, 3, 0, 4, 2, 0, 2, 2, 3, 2, 3,
       1, 0, 1, 2, 3, 2, 1, 0, 1, 1, 3, 3, 0, 0, 2, 4, 3, 1, 3, 1, 0, 1,
       1, 1, 4, 1, 3, 2, 4, 3, 0, 3, 1, 3, 4, 2, 3, 3, 4, 4, 0, 3, 3, 2,
       4, 1, 3, 2, 4, 2, 2, 2, 4, 1, 4, 0, 0, 0, 3, 2, 3, 4, 0, 3, 0, 4,
       0, 3, 0, 3, 4, 4, 4, 1, 4, 1, 0, 2, 4, 2, 0, 3, 4, 2, 1, 4, 2, 4,
       0, 2, 4, 2, 3, 2, 2, 3, 2, 2, 4, 4, 2, 2, 3, 4, 4, 1, 2, 1, 4, 2,
       0, 4, 3, 4, 0, 4, 4, 1, 2, 1, 3, 2, 4, 1, 3, 3, 3, 4, 4, 2, 2, 0,
       2, 0, 0, 0, 1, 3, 2, 4, 1, 1, 1, 0, 4, 4, 3, 1, 3, 1, 3, 3, 2, 2,
       0, 1, 4, 3, 4, 3, 0, 1, 0, 0, 1, 1, 4, 3, 1, 4, 2, 1, 1, 3, 4, 2,
       0, 0, 4, 0, 2, 3, 4, 4, 0, 1, 0, 1, 2, 4, 0, 1, 2, 0, 3, 3, 0, 4,
       2, 3, 1, 2, 0, 0, 2, 1, 1, 3, 3, 3, 2, 0, 2, 2, 4, 2, 2, 2, 4, 0,
       3, 3, 1, 1, 0, 3, 4, 0, 1, 2, 3, 4, 1, 0, 4, 3, 4, 3, 3, 3, 1, 3,
       4, 2, 3, 4, 2, 1, 3, 0, 1, 1, 1, 0, 1, 2, 2, 3, 1, 3, 3, 1, 0, 2,
       1, 1, 0, 2, 0, 4, 2, 4, 0, 3, 4, 3, 0, 1, 2, 2, 4, 2, 0, 1, 0, 3,
       1, 0, 4, 3, 1, 1, 2, 3, 0, 3, 4, 2, 3, 0, 2, 3, 3, 3, 1, 4, 1, 4,
       3, 0, 2, 1, 4, 0, 4, 4, 1, 0, 2, 2, 2, 4, 0, 0, 3, 3, 2, 4, 2, 3,
       2, 2, 1, 2, 1, 3, 0, 1, 2, 4, 4, 2, 1, 2, 3, 2, 2, 0, 0, 2, 3, 3,
       2, 2, 4, 2, 1, 3, 2, 1, 1, 1, 0, 1, 2, 3, 4, 3, 1, 1, 1, 0, 1, 1,
       1, 1, 4, 1, 0, 2, 0, 2, 0, 3, 2, 4, 0, 0, 3, 2, 4, 4, 3, 3, 2, 1,
       1, 3, 0, 1, 4, 0, 1, 3, 0, 4, 3, 3, 4, 4, 2, 4, 0, 3, 0, 0, 4, 4,
       3, 1, 1, 1, 2, 1, 2, 1, 2, 4, 3, 1, 2, 1, 2, 1, 1, 4, 4, 4, 0, 0,
       0, 2, 2, 0, 4, 2, 0, 0, 2, 4, 3, 2, 2, 0, 1, 0, 2, 2, 4, 0, 1, 4,
       0, 1, 3, 4, 3, 4, 1, 2, 3, 0, 3, 3, 0, 1, 3, 0, 1, 2, 2, 1, 0, 1,
       0, 2, 0, 1, 0, 2, 1, 1, 0, 2, 3, 1, 2, 2, 1, 1, 1, 0, 4, 2, 2, 1,
       1, 3, 1, 0, 2, 0, 1, 2, 0, 0, 1, 3, 4, 3, 2, 1, 0, 0, 3, 0, 1, 0,
       1, 3, 4, 0, 1, 1, 4, 2, 4, 3, 2, 4, 0, 0, 2, 1, 2, 0, 4, 3, 1, 4,
       0, 0, 2, 0, 0, 0, 0, 4, 4, 0, 1, 3, 3, 3, 1, 1, 2, 2, 1, 2, 0, 1,
       0, 2, 1, 1, 4, 2, 4, 3, 2, 1, 0, 2, 2, 4, 3, 4, 0, 4, 3, 0, 3, 2,
       4, 0, 1, 0, 2, 1, 1, 4, 0, 3, 2, 2, 4, 4, 1, 3, 3, 1, 3, 4, 1, 0,
       1, 1, 2, 4, 4, 2, 2, 0, 3, 3, 0, 1, 0, 0, 3, 2, 3, 1, 3, 1, 2, 3,
       2, 4, 1, 2, 3, 0, 4, 4, 2, 0, 0, 1, 2, 2, 2, 3, 4, 2, 1, 1, 1, 1,
       1, 2, 4, 4, 1, 3, 4, 2, 2, 2, 3, 3, 4, 0, 0, 1, 4, 0, 1, 1, 1, 2,
       2, 0, 3, 3, 1, 3, 0, 4, 0, 2, 3, 1, 1, 1, 4, 1, 4, 1, 1, 2, 2, 1,
       0, 3, 2, 4, 3, 0, 2, 2, 4, 4, 2, 0, 2, 1, 2, 2, 0, 3, 0, 4, 2, 1,
       0, 2, 3, 2, 1, 1, 2, 1, 0, 4, 3, 2, 1, 0, 0, 3, 3, 0, 1, 4, 2, 1,
       3, 0, 4, 0, 2, 3, 4, 2, 4, 0, 2, 0, 2, 0, 0, 3, 4, 0, 2, 1, 4, 0,
       3, 0, 2, 4, 1, 3, 2, 0, 2, 0, 3, 2, 3, 3, 3, 4, 1, 1, 1, 3, 3, 0,
       0, 2, 4, 4, 0, 0, 4, 2, 3, 3, 4, 1, 2, 4, 0, 1, 2, 4, 3, 2, 3, 0,
       1, 4, 2, 2, 0, 1, 3, 2, 1, 0, 1, 4, 4, 4, 3, 3, 1, 0, 4, 4, 4, 1, 2, 0, 3, 4, 4, 1, 1, 1, 4, 4,
       0, 1, 3, 4, 2, 3, 3, 0, 0, 1, 1, 4, 3, 0, 1, 0, 3, 0, 0, 2, 2, 4,
       4, 2, 4, 0, 2, 2, 3, 4, 0, 0, 2, 1, 1, 1, 3, 2, 3, 3, 1, 2, 4, 0,
       3, 0, 1, 3, 2, 1, 0, 2, 4, 4, 1, 1, 1, 4, 1, 2, 2, 0, 1, 3, 3, 3,
       3, 2, 3, 4, 4, 0, 4, 4, 3, 3, 3, 1, 3, 4, 0, 4, 0, 0, 1, 0, 2, 3,
       0, 2, 3, 4, 1, 0, 3, 3, 4, 0, 2, 1, 1, 2, 0, 2, 2, 1, 4, 4, 0, 2,
       3, 1, 2, 1, 4, 2, 1, 4, 3, 3, 1, 4, 2, 4, 1, 4, 0, 2, 2, 4, 1, 0,
       1, 3, 2, 3, 2, 2, 0, 4, 3, 4, 4, 2, 3, 1, 3, 1, 0, 1, 4, 2, 1, 3,
       4, 4, 1, 0, 0, 1, 1, 1, 2, 0, 2, 2, 0, 2, 2, 3, 2, 0, 0, 2, 4, 2,
       4, 1, 4, 4, 0, 1, 1, 1, 0, 0, 2, 0, 0, 2, 0, 0, 4, 1, 1, 3, 2, 1,
       4, 0, 4, 1, 0, 0, 0, 4, 3, 0, 3, 2, 1, 2, 4, 1, 2, 1, 0, 0, 0, 0,
       1, 2, 2, 3, 2, 3, 1, 4, 1, 0, 1, 4, 4, 3, 2, 2, 3, 2, 4, 4, 2, 4,
       4, 2, 0, 0, 1, 0, 1, 4, 3, 0, 1, 3, 2, 4, 1, 4, 4, 4, 1, 0, 0, 3,
       1, 4, 1, 3, 3, 1, 1, 0, 1, 1, 0, 4, 4, 2, 2, 0, 3, 0, 2, 2, 2, 1,
       0, 3, 3, 0, 3, 1, 1, 1, 2, 1, 0, 0, 3, 4, 0, 4, 4, 4, 4, 0, 4, 1,
       0, 0, 2, 3, 3, 3, 2, 3, 2, 0, 0, 1, 0, 2, 1, 4, 2, 1, 4, 0, 4, 4,
       2, 1, 3, 0, 0, 4, 2, 0, 1, 3, 1, 3, 3, 3, 0, 0, 0, 3, 1, 2, 2, 3,
       2, 0, 1, 4, 2, 4, 3, 1, 1, 3, 1, 3, 4, 1, 0, 3, 0, 3, 2, 1, 4, 3,
       0, 2, 0, 1, 4, 3, 2, 3, 2, 1, 4, 4, 1, 4, 4, 1, 4, 4, 2, 4, 1, 4,
       2, 0, 3, 3, 1, 1, 0, 3, 3, 0, 1, 4, 4, 4, 0, 0, 1, 4, 3, 0, 3, 2,
       0, 1, 2, 4, 1, 1, 2, 1, 4, 0, 0, 2, 0, 2, 4, 3, 3, 1, 4, 1, 1, 1,
       3, 3, 0, 0, 0, 4, 0, 4, 0, 1, 0, 2, 3, 0, 2, 1, 2, 0, 4, 3, 3, 1,
       1, 1, 1, 2, 2, 2, 4, 2, 4, 4, 2, 1, 1, 1, 0, 2, 0, 4, 3, 3, 1, 0,
       4, 4, 0, 3, 3, 0, 3, 4, 4, 3, 3, 0, 3, 0, 4, 1, 3, 2, 1, 4, 2, 3,
       2, 3, 4, 2, 4, 0, 4, 4, 3, 4, 1, 1, 1, 1, 2, 2, 4, 3, 2, 4, 3, 0,
       3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 1, 0, 2, 3, 4, 0, 4, 1, 0,
       1, 4, 1, 4, 2, 4, 3, 1, 0, 2, 2, 4, 3, 1, 2, 0, 3, 1, 3, 3, 1, 2,
       2, 1, 4, 1, 2, 4, 1, 2, 2, 1, 0, 4, 1, 3, 4, 1, 1, 1, 1, 4, 0, 4,
       1, 4, 4, 4, 0, 0, 0, 1, 0, 3, 3, 0, 2, 2, 1, 0, 0, 3, 1, 3, 0, 2,
       3, 1, 3, 4, 3, 2, 0, 4, 4, 3, 2, 0, 1, 3, 0, 4, 3, 4, 0, 3, 2, 0,
       3, 0, 1, 2, 3, 3, 0, 4, 4, 3, 3, 2, 1, 0, 0, 3, 2, 4, 2, 4, 0, 4,
       0, 3, 4, 1, 1, 4, 4, 4, 3, 2, 1, 3, 2, 4, 4, 1, 0, 1, 4, 0, 4, 3,
       4, 1, 3, 4, 1, 2, 1, 4, 3, 1, 2, 1, 1, 1, 4, 2, 0, 4, 3, 0, 2, 1,
       2, 1, 3, 1, 2, 0, 2, 0, 1, 1, 3, 3, 2, 4, 3, 2, 2, 4, 3, 1, 1, 1,
       4, 3, 3, 1, 4, 2, 1, 0, 4, 1, 2, 4, 0, 4, 2, 2, 1, 2, 3, 2, 2, 4,
       2, 2, 0, 1, 3, 0, 1, 3, 4, 3, 1, 1, 3, 2, 0, 3, 0, 4, 2, 2, 1, 2,
       0, 4, 3, 4, 3, 3, 0, 3, 0, 0, 1, 0, 4, 2, 2, 3, 4, 0, 0, 2, 1, 3,
       4, 2, 0, 4, 2, 4, 1, 1, 0, 3, 0, 1, 1, 2, 2, 4, 3, 0, 3, 2, 0, 2,
       0, 3, 4, 0, 3, 2, 4, 1, 1, 0, 2, 4, 4, 3, 4, 1, 3, 0, 2, 3, 0, 1,
       4, 3, 1, 0, 1, 4, 4, 0, 2, 0, 4, 4, 1, 1, 3, 0, 2, 1, 0, 0, 2, 4,
       3, 1, 3, 4, 2, 1, 3, 3, 1, 1, 3, 3, 2, 4, 4, 4, 1, 1, 2, 4, 4, 3,
       3, 3, 3, 0, 3, 0, 2, 0, 3, 0, 2, 2, 2, 1, 2, 2, 4, 2, 0, 2, 3, 0,
       0, 2, 0, 0, 1, 2, 4, 2, 2, 0, 0, 2, 0, 3, 0, 2, 2, 0, 2, 0, 4, 3,
       2, 2, 3, 3, 4, 0, 0, 3, 2, 0, 2, 4, 1, 3, 3, 1, 4, 1, 3, 1, 2, 2,
       2, 0, 4, 2, 4, 3, 1, 1, 3, 4, 2, 4, 1, 4, 4, 4, 4, 2, 4, 1, 2, 0,
       4, 0, 1, 2, 0, 4, 0, 0, 2, 1, 1, 1, 4, 3, 0, 4, 0, 1, 0, 0, 1, 3, 4, 3, 0, 2, 2, 1, 4, 4, 1, 0,
       2, 2, 4, 4, 0, 3, 4, 2, 3, 2, 1, 4, 2, 1, 4, 1, 2, 4, 3, 3, 1, 0,
       2, 0, 4, 0, 2, 4, 0, 3, 3, 1, 4, 0, 2, 0, 3, 1, 1, 3, 1, 2, 2, 3,
       1, 3, 0, 4, 3, 0, 2, 0, 3, 4, 2, 4, 3, 4, 2, 0, 3, 4, 2, 2, 0, 3,
       1, 3, 2, 4, 0, 3, 3, 2, 0, 1, 1, 1, 3, 2, 0, 1, 0, 3, 3, 0, 3, 4,
       1, 4, 1, 3, 2, 1, 4, 0, 1, 0, 3, 0, 2, 4, 1, 2, 3, 0, 2, 3, 1, 0,
       0, 2, 4, 4, 4, 0, 1, 2, 4, 4, 1, 0, 1, 1, 3, 0, 3, 4, 3, 4, 0, 2,
       2, 3, 0, 2, 0, 4, 0, 4, 2, 1, 1, 0, 0, 1, 4, 3, 0, 2, 4, 1, 0, 4,
       1, 0, 3, 4, 0, 3, 3, 3, 4, 0, 3, 3, 4, 2, 0, 2, 2, 2, 2, 2, 0, 2,
       0, 3, 4, 1, 3, 4, 1, 3, 4, 1, 4, 1, 0, 4, 2, 1, 1, 1, 2, 1, 1, 4, 3, 1,
       0, 0, 1, 0, 3, 1, 2, 4, 0, 3, 0, 2, 4, 2, 4, 4, 3, 0, 0, 4, 4, 2,
       2, 0, 4, 4, 2, 2, 3, 0, 2, 0, 0, 4, 3, 3, 4, 2, 4, 1, 0, 4, 3, 1,
       3, 2, 2, 0, 4, 3, 2, 4, 2, 4, 0, 1, 1, 4, 2, 0, 0, 0, 2, 2, 4, 1,
       1, 1, 1, 3, 4, 3, 1, 1, 4, 0, 0, 4, 0, 3, 4, 3, 2, 3, 0, 2, 3, 1,
       0, 0, 1, 1, 2, 1, 0, 0, 3, 2, 3, 0, 3, 4, 3, 3, 2, 2, 2, 4, 3, 1,
       4, 4, 1, 3, 2, 4, 0, 0, 1, 0, 2, 3, 4, 2, 1, 4, 3, 4, 1, 3, 4, 2,
       2, 2, 0, 0, 1, 0, 1, 4, 4, 3, 3, 2, 4, 4, 1, 3, 4, 4, 0, 1, 3, 1,
       4, 0, 2, 3, 1, 3, 3, 0, 2, 0, 1, 2, 0, 2, 3, 2, 4, 0, 1, 1, 1, 0,
       1, 0, 1, 0, 1, 4, 1, 1, 1, 3, 0, 1, 3, 3, 1, 4, 4, 1, 2, 1, 3, 1,
       3, 3, 2, 3, 1, 2, 1, 4, 0, 2, 4, 2, 0, 2, 3, 1, 1, 1, 4, 0, 0, 1,
       2, 0, 0, 0, 4, 4, 3, 3, 0, 2, 0, 4, 4, 3, 3, 4, 2, 1, 4, 1, 2, 4,
       2, 2, 4, 3, 1, 0, 1, 2, 4, 2, 1, 3, 0, 2, 3, 4, 1, 4, 3, 2, 0, 3,
       1, 4, 3, 1, 0, 2, 4, 3, 3, 3, 3, 3, 3, 0, 0, 2, 4, 1, 3, 1, 0, 2,
       1, 0, 2, 0, 3, 4, 4, 1, 2, 2, 0, 4, 3, 2, 2, 1, 0, 0, 3, 2, 0, 1,
       2, 2, 4, 4, 4, 3, 4, 0, 4, 4, 0, 1, 1, 4, 3, 2, 2, 3, 2, 3, 0, 2,
       2, 2, 1, 0, 0, 0, 1, 1, 1, 4, 2, 1, 1, 1, 2, 2, 0, 4, 3, 0, 0, 3,
       4, 1, 0, 2, 4, 1, 3, 4, 4, 0, 2, 2, 2, 4, 2, 1, 3, 4, 0, 4, 2, 0,
       2, 2, 4, 0, 2, 2, 1, 1, 4, 2, 0, 3, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0,
       2, 1, 0, 4, 0, 2, 3, 3, 4, 1, 1, 4, 3, 4, 0, 0, 3, 2, 2, 3, 2, 1,
       2, 3, 3, 2, 3, 1, 3, 4, 1, 4, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 0, 3,
       1, 4, 2, 2, 0, 3, 1, 2, 1, 2, 4, 3, 1, 2, 1, 0, 1, 2, 1, 3, 0, 2,
       4, 3, 2, 1, 4, 4, 0, 2, 0, 4, 0, 0, 3, 1, 3, 0, 0, 2, 4, 1, 4, 2,
       1, 2, 4, 1, 1, 2, 2, 1, 2, 2, 4, 2, 4, 3, 1, 3, 3, 4, 2, 1, 4, 2,
       1, 3, 1, 0, 3, 4, 1, 4, 0, 0, 3, 0, 2, 1, 1, 3, 1, 0, 4, 2, 0, 3,
       4, 1, 0, 2, 2, 0, 4, 3, 4, 3, 0, 1, 4, 4, 3, 3, 2, 0, 4, 0, 2, 3,
       1, 2, 3, 3, 1, 1, 0, 4, 4, 4, 0, 0, 4, 1, 2, 2, 0, 4, 2, 0, 3, 2,
       2, 3, 2, 1, 4, 0, 3, 0, 1, 1, 0, 1, 4, 1, 1, 4, 1, 2, 2, 0, 0, 4,
       3, 4, 1, 2, 4, 2, 2, 2, 0, 4, 3, 0, 3, 3, 2, 2, 3, 0, 4, 4, 4, 3,
       0, 4, 0, 1, 4, 3, 2, 4, 4, 0, 4, 1, 3, 4, 3, 4, 2, 3, 0, 1, 4, 1,
       3, 4, 1, 1, 4, 1, 4, 1, 3, 0, 2, 1, 2, 1, 1, 4, 1, 4, 2, 3, 1, 2,
       1, 2, 3, 1, 4, 2, 0, 4, 1, 4, 2, 1, 0, 1, 3, 1, 4, 0, 1, 3, 4, 1,
       1, 0, 4, 3, 1, 1, 1, 1, 4, 2, 1, 3, 2, 1, 2, 3, 4, 1, 1, 4, 2, 0,
       2, 2, 4, 1, 4, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 0, 3, 2, 4, 1, 2, 4,
       3, 1, 2, 1, 2, 0, 1, 4, 0, 1, 1, 0, 2, 2, 1, 3, 0, 3, 4, 4, 4, 3,
       3, 3, 2, 0, 3, 2, 2, 2, 4, 0, 0, 2, 3, 0, 0, 2, 3, 1, 0, 2, 0, 4,
       4, 3, 3, 0, 3, 0, 3, 4, 3, 4, 1, 1, 3, 0, 4, 3, 2, 3, 3, 3, 1, 0,
       0, 1, 1, 4, 3, 2, 2, 3, 3, 3, 4, 2, 2, 2, 1, 3, 2, 3, 1, 4, 0, 3,
       1, 3, 0, 0, 3, 3, 3, 1, 3, 0, 4, 3, 3, 4, 1, 2, 3, 2, 0, 1, 3, 0,
       3, 3, 2, 1, 4, 1, 3, 2, 3, 2, 4, 3, 2, 3, 2, 2, 3, 1, 4, 4, 0, 1,
       2, 2, 0, 0, 2, 1, 4, 2, 4, 0, 3, 3, 2, 1, 1, 3, 2, 0, 1, 2, 2, 1,
       0, 3, 4, 1, 1, 2, 1, 1, 4, 2, 0, 3, 3, 0, 4, 0, 3, 0, 2, 3, 0, 3,
       0, 1, 2, 0, 0, 4, 1, 1, 4, 4, 3, 0, 4, 0, 4, 0, 0, 2, 2, 3, 4, 1,
       4, 1, 0, 4, 4, 3, 4, 1, 2, 0, 3, 3, 1, 3, 0, 2, 4, 0, 3, 2, 0, 3,
       0, 1, 4, 3, 3, 4, 3, 4, 4, 4, 3, 4, 1, 4, 4, 3, 4, 3, 2, 4, 2, 2,
       2, 4, 3, 0, 1, 2, 1, 0, 3, 4, 3, 3, 4, 0, 1, 2, 3, 3, 3, 0, 0, 2, 0, 2, 1, 2, 0, 0, 4, 2, 3, 4,
       4, 3, 0, 1, 2, 1, 1, 3, 0, 1, 0, 0, 2, 2, 2, 4, 2, 2, 4, 0, 4, 4,
       1, 2, 3, 1, 0, 1, 0, 1, 1, 2, 0, 4, 2, 0, 3, 3, 4, 1, 2, 2, 3, 2,
       3, 0, 2, 1, 3, 1, 0, 2, 2, 4, 0, 2, 4, 4, 3, 0, 3, 4, 1, 2, 2, 4,
       3, 1, 4, 3, 0, 4, 4, 2, 4, 4, 0, 1, 4, 4, 1, 0, 3, 1, 4, 2, 0, 0,
       3, 1, 4, 3, 1, 1, 1, 1, 4, 1, 2, 4, 3, 4, 2, 4, 0, 0, 3, 1, 2, 1,
       3, 4, 1, 3, 1, 1, 2, 2, 2, 4, 3, 3, 1, 1, 0, 0, 3, 0, 0, 1, 0, 4,
       4, 2, 0, 1, 3, 0, 3, 3, 2, 3, 0, 1, 3, 4, 2, 1, 0, 4, 1, 3, 4, 1,
       1, 2, 1, 2, 2, 2, 0, 3, 2, 3, 0, 1, 1, 4, 4, 1, 3, 2, 1, 4, 1, 1,
       2, 1, 2, 0, 1, 0, 4, 0, 4, 1, 1, 3, 1, 4, 4, 2, 2, 1, 1, 1, 2, 4,
       0, 3, 3, 0, 4, 0, 0, 4, 4, 4, 3, 1, 0, 3, 0, 0, 1, 3, 1, 2, 0, 3,
       2, 4, 3, 2, 1, 3, 3, 1, 2, 2, 0, 2, 3, 4, 1, 2, 1, 1, 1, 4, 3, 2,
       4, 2, 2, 0, 4, 2, 1, 2, 1, 1, 4, 3, 1, 0, 0, 0, 0, 1, 0, 0, 4, 2,
       1, 1, 1, 1, 4, 3, 4, 3, 2, 1, 0, 3, 2, 4, 4, 2, 2, 2, 4, 1, 1, 2,
       2, 1, 1, 3, 0, 1, 3, 3, 1, 3, 2, 1, 1, 4, 4, 4, 1, 1, 0, 1, 1, 2,
       4, 1, 4, 1, 2, 4, 1, 0, 3, 0, 2, 2, 0, 0, 0, 3, 3, 0, 1, 0, 3, 3,
       4, 4, 4, 4, 1, 1, 1, 2, 3, 1, 3, 0, 0, 4, 4, 0, 3, 1, 3, 0, 1, 1,
       3, 4, 4, 4, 0, 2, 3, 0, 3, 2, 0, 1, 0, 3, 0, 2, 0, 1, 3, 0, 3, 1,
       0, 1, 1, 1, 1, 3, 4, 0, 1, 4, 4, 0, 0, 0, 0, 3, 4, 0, 4, 4, 2, 4,
       1, 0, 2, 4, 2, 0, 2, 4, 1, 0, 4, 3, 3, 3, 2, 1, 1, 4, 3, 0, 0, 0,
       3, 4, 3, 2, 4, 2, 4, 4, 3, 2, 4, 1, 0, 1, 2, 0, 1, 0, 2, 3, 4, 3,
       4, 2, 0, 2, 0, 4, 2, 3, 4, 2, 3, 3, 4, 4, 1, 0, 3, 1, 0, 1, 3, 3,
       1, 2, 4, 3, 3, 1, 4, 2, 1, 1, 2, 1, 1, 4, 4, 4, 1, 4, 2, 2, 1, 0,
       0, 3, 0, 1, 3, 0, 3, 3, 0, 3, 1, 2, 2, 4, 1, 2, 4, 0, 3, 0, 4, 0,
       4, 0, 1, 3, 4, 3, 3, 4, 1, 0, 0, 2, 2, 0, 2, 1, 1, 0, 1, 3, 4, 1,
       3, 2, 1, 2, 3, 4, 1, 1, 4, 0, 3, 3, 1, 0, 2, 4, 4, 3, 4, 2, 0, 3,
       1, 2, 0, 3, 1, 2, 1, 0, 2, 0, 0, 0, 4, 3, 3, 4, 3, 0, 1, 0, 2, 0,
       0, 1, 3, 0, 4, 4, 0, 2, 1, 1, 0, 0, 0, 0, 0, 3, 0, 2, 2, 3, 2, 1,
       2, 4, 3, 1, 1, 4, 1, 1, 2, 0, 1, 3, 3, 1, 1, 0, 1, 3, 1, 0, 4, 4,
       0, 3, 3, 0, 4, 3, 1, 1, 3, 0, 3, 1, 4, 0, 3, 4, 2, 4, 2, 1, 1, 2,
       3, 2, 0, 3, 3, 0, 2, 4, 3, 0, 1, 4, 2, 0, 1, 4, 4, 2, 2, 1, 0, 1,
       2, 1, 1, 2, 3, 3, 4, 4, 2, 3, 3, 3, 0, 3, 2, 3, 1, 1, 1, 3, 1, 0,
       3, 4, 1, 0, 2, 2, 1, 0, 0, 4, 4, 1, 3, 0, 0, 4, 0, 2, 2, 0, 0, 3,
       0, 2, 1, 4, 0, 0, 2, 4, 3, 0, 4, 0, 1, 1, 1, 4, 4, 4, 1, 2, 0, 0,
       1, 4, 0, 1, 2, 3, 0, 2, 1, 0, 3, 4, 2, 2, 3, 4, 0, 0, 4, 2, 2, 2,
       4, 4, 2, 3, 2, 4, 0, 0, 4, 2, 4, 1, 3, 2, 0, 4, 3, 3, 1, 0, 1, 1,
       3, 4, 1, 0, 3, 3, 0, 1, 4, 0, 4, 0, 3, 3, 1, 0, 4, 2, 0, 3, 2, 3,
       2, 0, 0, 3, 3, 1, 0, 4, 4, 4, 2, 3, 0, 2, 3, 0, 0, 3, 4, 2, 3, 1,
       4, 2, 1, 1, 3, 1, 2, 3, 3, 0, 3, 0, 4, 4, 4, 3, 2, 2, 0, 0, 0, 0,
       0, 0, 3, 0, 2, 3, 4, 3, 1, 1, 3, 1, 1, 4, 3, 3, 1, 3, 1, 2, 1, 2,
       4, 4, 0, 2, 2, 2, 2, 3, 2, 2, 2, 0, 2, 1, 1, 2, 1, 4, 4, 3, 4, 3,
       1, 2, 1, 3, 1, 3, 1, 4, 2, 4, 1, 0, 3, 1, 1, 0, 3, 2, 4, 4, 2, 1,
       1, 2, 4, 0, 1, 0, 3, 4, 4, 2, 3, 2, 4, 3, 0, 3, 0, 2, 0, 0, 2, 4,
       1, 1, 0, 4, 1, 1, 2, 2, 4, 0, 2, 0, 0, 0, 1, 2, 1, 4, 3, 4, 4, 4,
       2, 3, 4, 4, 3, 0, 1, 1, 4, 2, 4, 3, 1, 4, 0, 4, 0, 0, 0, 2, 0, 1,
       3, 1, 4, 0, 4, 1, 0, 1, 1, 2, 1, 2, 2, 4, 2, 1, 3, 2, 3, 3, 1, 3, 1, 1, 3, 3, 3, 0, 2, 2, 3, 4,
       3, 2, 4, 1, 2, 0, 3, 2, 1, 4, 0, 4, 4, 3, 2, 1, 1, 3, 3, 1, 1, 3,
       2, 3, 2, 0, 4, 3, 4, 2, 4, 1, 1, 3, 1, 2, 0, 0, 4, 2, 3, 3, 2, 3,
       2, 1, 4, 2, 2, 3, 1, 4, 3, 0, 0, 1, 4, 3, 3, 1, 4, 4, 1, 1, 2, 4,
       2, 1, 2, 2, 0, 1, 3, 2, 0, 0, 3, 2, 4, 4, 2, 4, 4, 3, 4, 2, 4, 0,
       3, 4, 3, 1, 3, 0, 4, 4, 4, 2, 3, 4, 3, 0, 0, 3, 2, 4, 3, 2, 3, 3,
       0, 3, 0, 3, 0, 2, 1, 2, 4, 0, 1, 4, 2, 0, 3, 4, 4, 1, 3, 4, 4, 2,
       4, 3, 1, 4, 2, 0, 2, 1, 1, 2, 1, 2, 4, 3, 3, 4, 4, 1, 1, 3, 0, 0,
       2, 3, 1, 0, 1, 2, 3, 1, 3, 4, 3, 2, 0, 1, 4, 3, 2, 3, 0, 4, 4, 3,
       0, 3])
# lambda: 1 1.5 2 2.5 3
interval_list3 = np.array([2.69802919e-01, 6.37062627e-01, 5.71906793e-05, 1.80006377e-01,
       7.93547976e-02, 4.84419358e-02, 1.03057317e-01, 2.11988241e-01,
       2.52726271e-01, 3.86979887e-01, 2.71669685e-01, 5.77939855e-01,
       1.14362204e-01, 1.05234865e+00, 1.38848124e-02, 5.55040163e-01,
       2.70045523e-01, 4.09003657e-01, 7.56364598e-02, 1.10386612e-01,
       8.06583851e-01, 1.72511360e+00, 1.88019306e-01, 5.89351749e-01,
       1.04530849e+00, 1.12502793e+00, 4.44397667e-02, 1.99189391e-02,
       9.30626426e-02, 1.05245149e+00, 5.17626747e-02, 2.73319350e-01,
       1.58372944e+00, 3.80890007e-01, 5.88628297e-01, 1.89544735e-01,
       5.79979439e-01, 8.99771860e-01, 9.22878759e-03, 6.93435894e-01,
       2.24865540e+00, 6.89491883e-01, 1.64560456e-01, 7.78610927e-01,
       5.44757035e-02, 2.97007182e-01, 1.19623030e+00, 1.73796829e-01,
       1.69680941e-01, 6.96474547e-02, 9.77847725e-03, 5.67900964e-01,
       1.18892683e-01, 1.54314405e-01, 3.38216973e-01, 2.74195472e-02,
       4.26796020e-01, 7.93387908e-02, 4.44952870e-01, 6.01583831e-01,
       5.39788476e-02, 2.67265518e-01, 5.92739369e-01, 2.67370728e-01,
       2.56221525e-02, 3.83823744e-01, 5.45016565e-01, 3.61688890e-01,
       1.44654052e+00, 4.41615441e-01, 1.16859818e+00, 7.39454010e-02,
       7.49908934e-02, 8.23547275e-01, 2.53480581e-01, 9.03739161e-02,
       1.31214354e+00, 2.13675835e-01, 6.94774031e-01, 6.47309910e-01,
       1.07410047e+00, 4.88647363e-01, 6.95035610e-01, 2.14544746e-01,
       1.57305986e-01, 1.13113546e+00, 2.79387862e-01, 1.67392377e+00,
       5.44491645e-01, 4.86028217e-01, 6.09403195e-02, 1.49278463e+00,
       2.98838628e-01, 4.31836824e-01, 2.62239878e-01, 1.35266305e-01,
       1.16848228e+00, 4.26281918e-01, 1.43722716e-03, 4.80049363e-01,
       1.97741227e-01, 3.74391368e-01, 1.08552453e+00, 2.21015088e-01,
       1.19590027e+00, 4.88232881e-01, 7.97386733e-03, 1.32562633e+00,
       5.87040229e-01, 2.96150133e+00, 9.45767256e-02, 7.37489500e-02,
       1.34852147e+00, 5.96711263e-01, 3.41395128e-02, 7.04194434e-01,
       7.00960285e-01, 1.28213428e+00, 6.21573008e-01, 6.63492766e-02,
       1.00402012e-02, 1.32803089e-02, 1.43574206e-02, 1.41321440e-01,
       9.83156255e-01, 3.86995424e-01, 4.02399253e-01, 9.22677893e-01,
       6.62935280e-02, 1.63685465e-01, 4.40654002e-01, 1.74658641e+00,
       4.11662352e-01, 9.41167106e-03, 8.06303145e-01, 1.32617468e-01,
       8.22805147e-01, 2.45397658e-01, 9.95868669e-01, 6.87423354e-01,
       4.06235965e-01, 7.33547653e-02, 3.08939216e-02, 6.46805961e-02,
       2.27874057e-02, 5.68610937e-02, 1.27903972e-01, 6.24117334e-01,
       4.10168768e-01, 6.31773629e-03, 3.73479154e-02, 1.70982830e+00,
       4.19781134e-01, 1.13634295e-01, 1.45393942e-01, 6.80948904e-01,
       1.08723330e-01, 4.35370677e-01, 1.75361221e+00, 9.38099519e-01,
       1.37118274e-01, 3.40381802e-01, 4.83733751e-01, 8.82990015e-01,
       8.52704478e-02, 9.37545338e-03, 3.62972518e-02, 3.33101831e-01,
       4.66120458e-01, 4.20651277e-01, 1.90895587e-01, 2.23777999e+00,
       4.33447065e-01, 2.39131762e-01, 4.00308536e-01, 6.83902044e-01,
       5.53170378e-01, 1.53887670e-01, 3.43187001e-02, 2.31084558e-01,
       4.96744535e-01, 1.17971312e-01, 6.98688885e-01, 3.44266985e-02,
       1.50765496e-01, 8.16748932e-01, 1.07484950e-01, 5.10077407e-01,
       3.71873315e-01, 1.29385502e+00, 1.52785071e-01, 3.41185914e-02,
       6.64137201e-01, 7.39595393e-01, 1.19198355e+00, 1.34391846e+00,
       7.02490548e-03, 1.33522959e-01, 4.79570877e-01, 1.48812486e+00])
interval_list1 = np.array([0.51122769, 0.06034958, 0.07951242, 0.2107864 , 0.52058199,
       0.86604518, 0.26597902, 0.28105336, 0.74685552, 0.51876217,
       0.1118537 , 0.27039891, 0.04810497, 0.45747798, 1.92710699,
       0.57526041, 0.85079243, 2.05514743, 1.49655087, 0.33476879,
       0.70607981, 1.15564029, 1.10366534, 0.92154806, 2.72251029,
       3.18296944, 0.12227317, 5.76781471, 1.04120016, 1.97624049,
       0.51454057, 0.19610777, 0.35300162, 0.03812743, 1.00158148,
       2.63369327, 0.93357223, 0.46425063, 0.5029029 , 0.2318885 ,
       0.43615691, 0.95088211, 0.95907683, 0.30251238, 0.01518109,
       0.47498318, 0.14977961, 3.41059551, 0.29170965, 0.21669536,
       1.65783966, 0.35798829, 0.11647418, 1.20036049, 4.64904667,
       0.069262  , 0.85775261, 0.01791068, 1.23544429, 2.06710994,
       2.10332544, 0.88245159, 0.71186913, 0.33985865, 0.7314231 ,
       1.42715894, 0.10284775, 0.43388223, 0.06119214, 0.01685005,
       0.72584418, 1.40016815, 0.73582006, 0.14124259, 0.28507593,
       1.07478079, 0.64154689, 0.18719072, 0.09431528, 0.96347376,
       0.99036489, 1.97919202, 0.89656317, 0.40090818, 3.64662669,
       0.06624997, 1.57943413, 0.12324799, 2.22397957, 0.18389697,
       0.37995964, 0.1545814 , 0.4834064 , 0.19519559, 0.11716511,
       1.5170557 , 1.75254919, 2.39117964, 0.91950515, 1.04741851,
       2.31480842, 2.12171792, 0.88640304, 0.74740607, 0.34304399,
       1.92009235, 1.23410243, 2.15879612, 1.01356639, 2.60571707,
       0.54090148, 1.29681702, 0.42183356, 0.73926139, 0.57146163,
       0.02921003, 0.50346167, 1.04267729, 0.98671718, 0.30685261,
       0.12458216, 0.07566777, 1.07159649, 1.95282066, 0.43643319,
       1.61166493, 0.60938307, 2.76380379, 0.05597477, 0.34063768,
       0.51982091, 0.45302036, 0.17344134, 2.73352991, 0.53399413,
       0.05005741, 0.74958964, 0.5481797 , 0.30296085, 0.39193427,
       1.74560296, 0.91083389, 0.59901699, 0.27943765, 1.16398187,
       0.53880877, 0.32046113, 0.30416314, 0.94556855, 0.11153172,
       1.72721956, 0.0316003 , 0.21962719, 0.5682262 , 0.34846246,
       1.14626814, 1.88155234, 0.58669487, 0.10345747, 1.41985059,
       1.56838618, 2.3224692 , 2.03814856, 0.65215023, 0.29943279,
       1.31314593, 1.90019098, 0.0109126 , 0.48748654, 2.06639527,
       0.488636  , 1.45405238, 0.90134488, 3.16239075, 1.1553048 ,
       1.39951944, 0.03578165, 0.66288938, 0.4186226 , 1.81265771,
       0.25289942, 0.36661168, 0.02134943, 0.35934078, 0.04924228,
       0.73336455, 0.25706994, 0.45264581, 1.01080252, 1.79264474,
       0.09911575, 3.30065034, 0.87762963, 1.19723361, 0.31181273,
       0.393529  , 1.01332956, 1.59045025, 0.78584065, 0.13228635])
interval_list2 = np.array([1.31934940e-01, 2.52296878e-02, 1.44911054e+00, 1.12669561e-01,
       2.36816994e-01, 1.77105951e-01, 2.52066865e-02, 2.82393064e-01,
       9.89327478e-02, 6.28156686e-01, 3.73457897e-01, 2.19900427e-01,
       4.98734555e-02, 1.88667010e-01, 3.10489087e-01, 1.42439438e-01,
       1.13342154e-01, 5.18823518e-01, 4.06342990e-04, 6.26596872e-01,
       4.17436472e-02, 5.92119756e-01, 1.02331592e+00, 2.52727010e-01,
       1.92053170e-01, 1.65285058e-01, 2.14663539e-01, 1.46240801e-01,
       2.03526556e-01, 9.07937793e-02, 3.18356166e-01, 6.05545330e-01,
       5.86302289e-01, 5.18358994e-01, 1.60826378e-01, 9.75664789e-02,
       3.70461922e-02, 2.05850603e-01, 1.21888955e-01, 1.26774536e+00,
       4.91688312e-02, 7.88894573e-02, 7.25510313e-03, 2.56867113e-01,
       5.24383469e-01, 6.93299096e-01, 1.28342952e-01, 5.00294715e-02,
       1.04581818e+00, 3.22977702e-01, 2.18311787e-01, 2.36989709e-01,
       1.37436701e+00, 2.26622350e-01, 9.85190238e-01, 3.42499615e-01,
       1.43631428e+00, 1.17155365e+00, 2.23184970e-01, 2.01502716e+00,
       4.96097693e-01, 9.84868784e-03, 3.36533407e-01, 2.34851195e-01,
       3.44832613e-01, 3.26703655e-01, 8.46125410e-01, 9.45772085e-01,
       1.09098046e-01, 1.15721362e+00, 8.37532310e-01, 2.46701058e-02,
       1.76751655e+00, 4.93434189e-01, 3.96057991e-01, 2.22938751e-01,
       8.00956711e-02, 3.75613334e+00, 1.73356488e-01, 1.29115182e-01,
       5.10555216e-01, 1.79320276e-02, 1.37252613e+00, 6.88824981e-01,
       1.48109673e+00, 4.59279047e-01, 1.39863613e-01, 3.68019373e-01,
       5.22654763e-01, 6.41269581e-02, 5.08287366e-02, 1.24471462e+00,
       1.13339815e+00, 5.49125297e-01, 1.74612411e-02, 6.54823356e-01,
       4.38674201e-04, 7.75105454e-01, 8.99821709e-02, 7.45448095e-01,
       1.02608632e-01, 1.37531774e-01, 1.19566509e+00, 6.81426280e-01,
       5.23263271e-01, 8.06237900e-02, 1.98954415e-01, 1.24858319e-01,
       1.88205235e+00, 3.05241155e-02, 2.38422675e-01, 5.65762768e-01,
       3.46963420e+00, 1.92930321e-02, 1.86045236e-01, 1.65440553e-01,
       6.36531383e-03, 7.58129153e-02, 1.07664160e-01, 3.79542106e-01,
       1.96424168e-01, 2.03167429e-01, 9.11704779e-01, 1.45606664e-01,
       2.28213661e-01, 1.80019318e-01, 2.14304291e-01, 1.75179054e+00,
       4.00650286e-01, 1.67019069e-01, 7.04668015e-02, 8.96550385e-01,
       1.42823288e-01, 7.64191200e-01, 2.48993531e+00, 1.98875922e-02,
       1.75881670e-01, 2.34017133e-01, 3.58097555e-03, 1.83871972e+00,
       7.87845309e-02, 8.09887007e-01, 1.22378071e-01, 2.53937285e+00,
       1.21805254e+00, 8.89943408e-03, 6.10880891e-01, 8.82307317e-01,
       9.03365370e-01, 3.62926559e-01, 2.69853559e-02, 2.10335773e-01,
       4.60655508e-01, 1.95732027e-01, 1.52449156e-01, 1.81088144e-02,
       9.27222623e-01, 2.93069533e-01, 8.00937745e-01, 4.64890845e-01,
       4.76147158e-01, 3.08766295e-01, 1.72324131e-01, 7.26836461e-01,
       4.01324173e-01, 2.73683904e-01, 5.22661385e-01, 4.78822513e-02,
       4.93598425e-03, 4.68243716e-01, 2.54601156e-01, 3.27307245e-01,
       1.08922445e+00, 2.34233006e-01, 8.18250861e-01, 3.65504990e-02,
       3.19742011e-01, 5.57404358e-01, 7.33217081e-01, 1.86548081e-01,
       9.66979410e-03, 4.92273596e-01, 5.16129873e-03, 1.65485087e+00,
       2.27019506e-01, 2.18616410e-01, 5.92134318e-02, 6.90921155e-01,
       2.42186779e-01, 9.26816771e-01, 1.02100229e-01, 1.88046797e-01,
       6.32009495e-01, 1.30062971e+00, 7.58072623e-01, 3.27415358e-02,
       4.01159447e-01, 8.95200633e-02, 2.01042195e-01, 5.43067835e-01])
interval_list1_5 = np.array([4.91037071e-01, 3.43561623e-01, 8.73806814e-02, 1.44513455e-02,
       8.42227615e-01, 1.43188565e+00, 1.04813250e+00, 6.18349188e-01,
       1.00476171e+00, 4.34773809e-01, 3.30548286e-01, 2.83704063e-01,
       3.22546542e-01, 1.84763045e+00, 4.52685992e-01, 1.53772399e-01,
       7.11546584e-01, 2.82722636e-01, 3.38459062e-01, 5.70994928e-01,
       6.99756735e-01, 9.40442311e-01, 4.13034223e-02, 6.31724402e-02,
       5.81488129e-01, 1.24398449e+00, 1.67873680e-01, 2.87975597e-01,
       1.71293024e-01, 2.89181971e-01, 3.64525127e-01, 9.06813876e-01,
       5.66988036e-01, 5.28059234e-01, 1.38016439e+00, 4.17030942e-01,
       6.49610440e-01, 2.52337913e+00, 8.73356386e-01, 9.15571406e-01,
       2.87768741e+00, 4.39165386e-01, 1.47841219e+00, 1.56625512e+00,
       2.75382461e-03, 6.46646555e-01, 1.03670506e-01, 5.31465523e-01,
       1.12814362e+00, 3.53027390e-01, 5.51983510e-01, 6.31071508e-01,
       2.12758053e+00, 9.40875125e-01, 2.09684997e-01, 3.43803000e-01,
       1.02032006e-01, 2.36007719e+00, 3.36467889e-01, 8.95673447e-01,
       1.41302433e-01, 1.49661845e-02, 1.42405754e+00, 2.83445860e-02,
       3.11338334e-01, 1.04527135e+00, 9.51520180e-02, 3.67010281e-01,
       1.36066817e-01, 3.26285381e+00, 2.43650308e+00, 6.95346615e-02,
       4.18256736e-01, 1.48363075e-01, 3.08294288e-01, 4.92123644e-01,
       5.38713297e-01, 1.76923387e-01, 1.06137289e-01, 1.53058399e-01,
       1.43336744e+00, 7.99057040e-01, 1.23792651e+00, 1.06185826e+00,
       3.66616235e-01, 5.47118811e-01, 3.13456147e-01, 8.25287557e-01,
       1.14306815e+00, 3.44600687e-01, 3.73227684e-02, 3.23344827e-02,
       3.58197128e-01, 8.04310916e-01, 4.45509022e-01, 5.75958881e-01,
       3.38701607e-01, 6.50174471e-01, 1.01478644e+00, 4.01014227e+00,
       2.82017821e-01, 2.52896767e-01, 1.13917286e+00, 6.64668542e-02,
       3.54092021e-01, 4.08493616e-01, 1.90300163e-01, 3.54457509e-01,
       1.71110359e-01, 1.99293203e+00, 1.25770836e-01, 2.80043815e-02,
       2.21818617e+00, 9.46536779e-01, 2.47731341e-01, 1.59117091e+00,
       2.25379699e-01, 6.16935363e-02, 1.08621568e-01, 9.31272092e-01,
       1.32589802e-01, 3.28092174e-01, 3.01046541e-01, 7.38171931e-02,
       1.62617567e-01, 3.27079341e-01, 2.65558193e-02, 1.30376531e-01,
       6.13797725e-01, 2.23572195e-01, 2.31459632e-01, 2.16975985e-01,
       5.14932904e-01, 9.38475563e-01, 1.61980981e+00, 9.67979454e-01,
       4.15943765e-02, 2.15679154e+00, 3.28930112e-01, 1.09272505e+00,
       1.48112492e+00, 5.97492615e-01, 2.38458956e-01, 1.28582742e+00,
       4.36779381e-01, 8.15148306e-01, 1.24786429e+00, 8.01773445e-01,
       1.57474142e-01, 1.02756439e+00, 4.07445663e-01, 3.04583688e-01,
       1.45863620e-01, 4.65572714e-02, 2.60225853e-01, 7.01687486e-01,
       3.33489230e-01, 1.66214195e-01, 4.73132784e-01, 1.22008169e+00,
       1.33846364e-01, 1.44244770e+00, 1.48136752e+00, 2.94089485e-01,
       2.93372530e-01, 5.06737028e-02, 6.93201144e-01, 1.16676862e+00,
       3.10301959e-01, 4.71963504e-01, 1.58373507e+00, 1.86476484e-01,
       1.28312968e-02, 8.12337063e-01, 1.80089168e+00, 1.68155031e-01,
       8.65666070e-01, 2.19410642e-01, 2.55821904e-01, 2.82506093e+00,
       5.56136422e-01, 2.07193035e-01, 1.20254975e-01, 1.93277327e+00,
       1.03108952e+00, 1.24706305e-01, 1.51933164e-01, 1.04346327e-01,
       6.59793995e-03, 1.14045878e-01, 8.69119932e-02, 7.41670448e-01,
       3.33750551e-01, 1.48286564e-01, 1.13916897e+00, 1.95158071e+00,
       1.12650359e+00, 1.83691164e+00, 1.73989981e-01, 3.32097409e-01])
interval_list2_5 = np.array([2.44576450e-02, 5.57606813e-01, 5.97497826e-02, 5.78277906e-01,
       2.94634864e-01, 1.36897903e-03, 6.21569283e-01, 1.58892178e-01,
       9.77254165e-01, 2.30413567e-01, 5.27113654e-01, 2.62853831e-01,
       5.43633849e-01, 2.37028273e-02, 4.18998303e-01, 7.65346906e-01,
       3.75101974e-01, 4.72849664e-01, 2.93727747e-01, 3.87823423e-01,
       2.26288282e-01, 3.18931568e-02, 3.81771578e-01, 2.52350213e-02,
       4.30968192e-01, 1.14969486e-01, 4.26368842e-01, 3.57761052e-01,
       5.03994866e-01, 9.37553357e-01, 7.45106816e-01, 4.38869262e-02,
       2.89667190e-02, 1.07986899e-01, 1.01004815e+00, 4.44283116e-02,
       6.05819899e-01, 1.00138390e+00, 5.74556609e-02, 8.38510452e-01,
       3.21779805e-01, 1.12918409e+00, 2.63584018e-01, 4.91094818e-01,
       5.94279992e-01, 2.56208672e-02, 9.54834788e-01, 7.42861918e-02,
       4.42600689e-02, 6.27748612e-01, 6.12638074e-01, 1.12569774e-01,
       2.52668610e-01, 2.02663081e-01, 2.47369179e-01, 3.07281520e-01,
       6.77047681e-02, 3.26512569e-01, 1.66130183e-01, 1.82928465e-01,
       2.55223902e-02, 8.84914425e-01, 4.49309354e-01, 5.61220968e-01,
       9.58668093e-01, 2.24454109e-01, 4.96764804e-01, 6.58089028e-01,
       3.41113197e-01, 1.08731029e-01, 1.25244316e-01, 3.85230230e-01,
       2.99871435e-03, 2.36856926e-01, 5.06686424e-01, 2.09598038e-01,
       2.11618323e-01, 6.26407000e-01, 5.22676909e-01, 7.96496470e-01,
       5.31347834e-02, 2.77152209e-01, 5.87193308e-01, 1.31640380e-01,
       5.84121626e-01, 8.20070830e-02, 1.50038073e-01, 6.58105401e-01,
       1.47181107e-01, 1.02580928e-01, 7.77071631e-02, 4.57272646e-02,
       2.53448708e-01, 5.57500299e-02, 4.07796277e-01, 2.19777966e-01,
       1.61566662e-01, 3.40988140e-02, 1.21469970e-01, 1.62935082e+00,
       8.15074598e-02, 2.48819731e-01, 6.46120408e-01, 6.26233154e-01,
       1.35489605e+00, 8.57664279e-01, 6.33111732e-01, 2.00489674e-01,
       7.63542746e-02, 2.25899283e-02, 2.93445568e-01, 3.13313585e-01,
       2.11457838e-01, 1.41230958e-01, 3.06214227e-01, 1.11296522e-01,
       3.47874497e-01, 2.58737298e-01, 1.09481152e-01, 5.80528102e-01,
       1.65277222e+00, 5.59366677e-02, 9.03929946e-02, 7.96046753e-02,
       1.09817521e-01, 1.26012489e-01, 1.04945894e-03, 3.12078362e-02,
       4.36427703e-01, 3.96132231e-01, 9.74491790e-02, 5.84588107e-01,
       3.91452549e-01, 7.59179521e-02, 1.88962581e-01, 4.55093015e-03,
       1.94783449e-02, 1.05343392e-01, 1.25403082e+00, 7.71659477e-01,
       3.47287337e-01, 1.01975817e-01, 1.94235994e+00, 6.85968153e-02,
       2.28717874e-01, 2.23610975e-01, 9.24342575e-02, 5.29804880e-01,
       4.84625282e-01, 2.69947854e-02, 2.72708228e-01, 2.16308024e-01,
       4.83532264e-01, 1.88409120e-01, 2.46585761e-03, 6.56510261e-01,
       4.77390729e-01, 1.70422528e-01, 1.09694779e+00, 3.48928422e-01,
       5.39081764e-01, 3.35343085e-01, 6.33968731e-01, 1.34545976e-01,
       4.39241549e-01, 5.77109302e-02, 1.25515462e-01, 4.26975628e-02,
       6.68718815e-01, 1.22233691e-01, 1.35943438e-01, 1.96564373e-02,
       8.03190357e-02, 6.12306423e-01, 4.13572177e-01, 1.07044376e+00,
       1.44368624e-01, 1.99316777e-01, 5.50713257e-01, 8.05896079e-01,
       2.06842364e+00, 8.02883516e-01, 1.26388577e+00, 2.93554240e-02,
       3.93472807e-01, 1.03077476e-01, 3.87935793e-02, 3.00229852e-01,
       2.78024010e-01, 1.90635035e-01, 2.33401420e-01, 1.54128045e+00,
       8.29112383e-02, 3.84150663e-01, 3.24389510e-01, 1.24467462e-01,
       6.89555072e-02, 3.42527812e-01, 2.01967379e-01, 1.22197489e-01])
interval_dict = {
    1: interval_list1,
    1.5: interval_list1_5,
    2: interval_list2,
    2.5: interval_list2_5,
    3: interval_list3
}
# interval_list = np.random.exponential(0.3, 200)       # 模拟每个DAG之间的时间间隔 size=200
# request_list = np.random.randint(0, NUM_AGENTS, size=200)   # 每个请求从哪个服务器发出 size=200

class ScheduleEnv():
    def __init__(self):
        super(ScheduleEnv, self).__init__()
        self.state = [0 for i in range(NUM_AGENTS)] # initialize the current state and will keep updating it in the step function
        self.env_avail_actions = self.get_avail_actions_env()
        self.n_actions = len(self.env_avail_actions)
        self.agents = NUM_AGENTS
        self.reset()
        
    def reset(self):
        # Reset the environment to its initial state
        # Return the initial observation
        for agent_i in range(self.agents):  
            self.state[agent_i] = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, -1])        # 每个服务器的缓存，剩余空间，空闲时间戳,当前时间戳
        return self.get_state()
        
    def get_info(self):
        return {
            'state_shape': self.agents * 13,
            'action_shape': 5,
            'n_actions': self.n_actions,
            'n_agents': self.agents,
            'episode_limit': 40
        }
    
    def get_state(self):
        # return np.copy(self.state)
        return copy.deepcopy(self.state)
    
    def get_avail_actions_env(self):
        avail_actions_env = []
        for i in range(2**5):
            binary = bin(i)[2:].zfill(5)
            action = [int(x) for x in binary]
            if sum(action) <= 3:
                avail_actions_env.append(action)
        return avail_actions_env  # 26个基本动作 从不超过3个1的动作里选

    def get_masked_actions(self, state):
        state_np = state.cpu().numpy()
        num = len(state_np)
        mask = np.zeros((num, self.n_actions))
        for i in range(len(state_np)):
            avail_action = np.where(state_np[i][5:10] == 1, 1, 0)  # 强制保留
            
            if sum(avail_action) == 0:
                mask[i] = [1 for i in range(self.n_actions)]
            else:
                place_index = np.where(avail_action == 1)[0]
                avail_actions = [k for k, action in enumerate(self.env_avail_actions) if all(action[j] == 1 for j in place_index)]
                mask[i] = [1 if t in avail_actions else 0 for t in range(self.n_actions)]
        mask_tensor = torch.tensor(mask).cuda()
        return mask_tensor   # [1,0,...] 1 indicates the action is available whlie 0 indicates the action is unavailable
    
    def step(self, actions):  # 根据当前obs 执行actions之后，返回obs和state  不是这个时隙执行之后的 只是执行动作立刻得到的因为obs会变
        # actions:[[0,0,xxx,1,0,0],[0,xxx,1,0,0,0],[0,0,xxx,1,0,0]] list[np,np,np]
        # Return the new observations, rewards, dones
        state = self.get_state()
        migration = []
        # hiring_cost = 0
        reward = [0 for i in range(self.agents)]
        for agent_id in range(self.agents):
            action = self.env_avail_actions[np.where(actions[agent_id] == 1)[0][0]]
            state[agent_id][0:5] = action
            state[agent_id][5:10] = [0,0,0,0,0]
            state[agent_id][10] = 3 - sum(action)
            migration.append([1 if (y_1 == 1 and y_2 == 0) else 0 for y_1, y_2 in zip(state[agent_id][0:5], self.state[agent_id][0:5])])  # [[0,1,1..]]
            state[agent_id][11] = self.state[agent_id][11]
            state[agent_id][12] += 1
            # hiring_cost += Gamma * sum(action * service_size * TIME_STAMP / 1000)
            reward[agent_id] += -w_1 * Gamma * sum(action * service_size * TIME_STAMP / 1000)
            reward[agent_id] += -w_2 * sum(migration[agent_id] * service_size * mu_c)
        # migration_cost = sum(sum(migration[i] * service_size * mu_c) for i in range(self.agents))
        
        # 有DAG结束判断是否超出deadline 在调度过程中给出
        # reward = -(w_1 * migration_cost + w_2 * hiring_cost)
        done = [False for i in range(self.agents)]
        self.state = state
        return state, reward, done
    
    
    
    # 只有obs state action_onehot才必须用numpy tensor表示 因为需要进入网络 别的都用list即可
