import numpy as np
from Configure import NUM_AGENTS, capacity
import torch
import copy
class Server:
    def __init__(self, id, comp, capacity=None):
        self.id = id
        self.task_list = []
        self.comp = comp
        self.capacity = capacity
        self.service_list = []
        self.service_migrate = []
        self.service_start = []
        self.service_end = []
    
class Remote_cloud:
    def __init__(self, id, comp):
        self.id = id
        self.vms = [VM(comp) for _ in range(3)]
        self.comp = comp
        self.task_list = [] 

class VM:
    def __init__(self, comp):
        self.task_list = []
        self.comp = comp
        
server_capacity = np.array([197, 182, 182, 192, 188, 193, 185])
comp = np.array([5335, 5340, 5390, 5126, 5341, 5355, 5260])
service_size = np.array([55, 57, 59, 53, 54])
request_list3 = np.array([2, 0, 1, 1, 1, 2, 1, 1, 2, 0, 0, 2, 2, 0, 0, 0, 2, 1, 2, 1, 0, 2,
       0, 1, 0, 1, 2, 1, 1, 2, 2, 2, 1, 1, 0, 0, 2, 0, 2, 2, 0, 1, 2, 1,
       1, 1, 1, 0, 1, 0, 1, 2, 2, 2, 1, 0, 1, 0, 2, 0, 0, 2, 0, 2, 1, 2,
       1, 2, 0, 2, 2, 0, 2, 1, 1, 1, 0, 2, 2, 1, 2, 2, 0, 0, 1, 1, 2, 2,
       0, 0, 1, 2, 0, 0, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 0, 0, 2, 0, 1,
       0, 0, 1, 1, 2, 0, 0, 0, 2, 0, 1, 2, 2, 0, 2, 1, 1, 0, 0, 0, 2, 0,
       2, 2, 0, 1, 2, 1, 0, 1, 1, 2, 0, 0, 2, 0, 2, 2, 1, 2, 2, 0, 1, 0,
       0, 0, 2, 0, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 0, 0, 2,
       1, 2, 1, 0, 1, 1, 1, 1, 2, 0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 1, 2, 0,
       1, 1])
request_list5 = np.array([3, 1, 0, 1, 2, 1, 0, 4, 3, 1, 2, 1, 3, 3, 3, 0, 0, 4, 1, 1, 4, 2,
       3, 2, 2, 2, 2, 4, 3, 3, 1, 0, 0, 1, 0, 2, 2, 4, 1, 4, 0, 0, 4, 2,
       3, 1, 1, 4, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 4, 3, 4, 0, 1, 0, 2,
       2, 2, 1, 3, 0, 3, 2, 0, 2, 1, 2, 1, 0, 4, 0, 4, 2, 2, 1, 1, 3, 1,
       1, 1, 4, 3, 1, 1, 4, 1, 2, 0, 1, 3, 2, 4, 3, 3, 0, 2, 4, 3, 4, 2,
       2, 4, 0, 0, 4, 2, 3, 2, 0, 2, 1, 1, 3, 1, 1, 3, 1, 0, 4, 3, 2, 4,
       3, 0, 1, 3, 2, 2, 0, 4, 3, 2, 3, 4, 3, 2, 4, 4, 0, 0, 4, 3, 1, 3,
       3, 2, 4, 2, 4, 4, 4, 1, 0, 0, 3, 1, 2, 0, 0, 2, 2, 1, 4, 4, 3, 3,
       0, 3, 4, 2, 0, 2, 4, 1, 1, 2, 0, 3, 4, 1, 0, 1, 3, 4, 4, 4, 0, 4,
       2, 0])
request_list7 = np.array([6, 6, 0, 4, 5, 0, 1, 5, 3, 1, 4, 2, 6, 0, 0, 3, 0, 0, 3, 3, 0, 6,
       4, 3, 3, 6, 1, 4, 2, 1, 2, 0, 0, 5, 6, 3, 3, 2, 1, 0, 6, 0, 1, 2,
       4, 2, 3, 3, 1, 0, 0, 0, 1, 0, 2, 0, 2, 0, 5, 1, 6, 4, 0, 4, 2, 4,
       1, 6, 4, 2, 1, 6, 4, 5, 1, 3, 4, 2, 4, 4, 0, 3, 2, 4, 2, 6, 5, 4,
       1, 3, 5, 4, 0, 6, 5, 6, 2, 1, 0, 6, 0, 3, 6, 2, 0, 5, 4, 6, 5, 6,
       5, 4, 1, 4, 2, 1, 5, 5, 4, 5, 1, 1, 2, 2, 2, 0, 2, 1, 4, 4, 0, 1,
       5, 1, 2, 2, 5, 2, 4, 5, 2, 5, 6, 1, 2, 3, 1, 1, 6, 6, 6, 3, 0, 2,
       2, 2, 0, 4, 4, 2, 3, 2, 6, 4, 5, 2, 3, 1, 4, 3, 1, 3, 0, 2, 5, 6,
       2, 5, 5, 2, 0, 4, 5, 4, 6, 0, 5, 4, 2, 5, 2, 1, 2, 6, 2, 3, 2, 5,
       0, 1])
request_list1 = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0])
request_list4 = np.array([0, 2, 1, 1, 0, 3, 1, 1, 0, 2, 2, 3, 2, 3, 0, 2, 0, 0, 0, 1, 0, 0,
       0, 0, 0, 1, 2, 1, 0, 2, 3, 1, 0, 0, 0, 3, 3, 1, 3, 1, 0, 0, 1, 1,
       3, 2, 1, 3, 3, 3, 0, 2, 3, 0, 2, 0, 0, 2, 3, 2, 3, 3, 0, 2, 1, 3,
       3, 1, 1, 0, 1, 1, 2, 3, 0, 2, 0, 0, 2, 0, 2, 2, 0, 2, 2, 0, 1, 3,
       1, 3, 1, 0, 2, 2, 2, 0, 1, 1, 0, 1, 3, 1, 0, 2, 0, 0, 1, 3, 3, 3,
       1, 0, 0, 1, 0, 2, 3, 3, 0, 3, 0, 3, 0, 1, 1, 1, 2, 1, 2, 0, 2, 0,
       3, 2, 3, 1, 3, 2, 3, 2, 2, 1, 1, 0, 1, 1, 3, 1, 2, 1, 1, 3, 3, 0,
       0, 3, 3, 3, 3, 2, 2, 1, 0, 0, 0, 1, 0, 1, 2, 1, 3, 3, 1, 2, 2, 3,
       3, 1, 1, 1, 3, 1, 3, 2, 3, 1, 3, 3, 0, 3, 0, 0, 2, 2, 1, 1, 2, 2,
       1, 0])
request_list6 = np.array([1, 1, 1, 3, 4, 3, 4, 0, 3, 4, 4, 5, 2, 5, 1, 2, 3, 0, 4, 5, 5, 5,
       2, 3, 0, 2, 2, 3, 2, 4, 1, 1, 4, 2, 1, 3, 2, 1, 5, 2, 2, 2, 2, 1,
       3, 4, 2, 3, 5, 3, 2, 5, 2, 1, 5, 0, 5, 3, 5, 2, 2, 2, 3, 2, 4, 2,
       2, 2, 1, 4, 3, 3, 5, 1, 0, 4, 1, 3, 4, 1, 0, 3, 4, 2, 0, 0, 5, 3,
       1, 4, 3, 5, 3, 5, 0, 2, 1, 5, 5, 2, 4, 0, 2, 1, 1, 3, 2, 2, 3, 2,
       2, 2, 1, 3, 3, 0, 0, 3, 5, 3, 5, 5, 4, 0, 1, 4, 4, 5, 3, 2, 5, 3,
       4, 3, 2, 2, 4, 0, 5, 5, 5, 1, 2, 4, 4, 5, 1, 3, 1, 4, 4, 1, 0, 0,
       3, 0, 1, 2, 3, 3, 4, 5, 3, 0, 1, 2, 0, 3, 1, 1, 3, 2, 2, 4, 4, 3,
       2, 0, 0, 1, 0, 3, 2, 1, 1, 3, 3, 3, 2, 4, 5, 0, 1, 5, 0, 2, 2, 0,
       2, 1])
request_dict = {1: request_list1, 3: request_list3, 4: request_list4, 5: request_list5, 6: request_list6, 7: request_list7}
task_type = np.array([2, 0, 3, 4, 3, 1, 0, 2, 1, 4, 4, 0, 0, 4, 0, 3, 2, 4, 3, 2, 0, 4,
       3, 3, 1, 0, 4, 4, 0, 0, 3, 1, 2, 1, 1, 0, 1, 1, 3, 0, 1, 4, 3, 2,
       3, 0, 0, 1, 2, 4, 1, 3, 2, 1, 4, 4, 1, 3, 2, 1, 2, 2, 0, 3, 1, 3,
       4, 3, 3, 1, 2, 0, 1, 0, 4, 2, 2, 4, 3, 0, 0, 3, 2, 0, 0, 3, 3, 0,
       1, 4, 0, 4, 4, 4, 3, 3, 1, 1, 1, 2, 4, 4, 0, 1, 0, 2, 3, 3, 1, 1,
       1, 1, 2, 2, 2, 3, 3, 0, 4, 2, 1, 3, 3, 1, 1, 4, 1, 4, 4, 3, 4, 1,
       1, 4, 3, 4, 0, 2, 4, 3, 3, 1, 1, 3, 2, 3, 2, 1, 0, 0, 2, 2, 2, 2,
       0, 3, 2, 0, 1, 4, 3, 1, 3, 2, 3, 0, 3, 0, 4, 2, 0, 2, 2, 3, 2, 3,
       1, 0, 1, 2, 3, 2, 1, 0, 1, 1, 3, 3, 0, 0, 2, 4, 3, 1, 3, 1, 0, 1,
       1, 1, 4, 1, 3, 2, 4, 3, 0, 3, 1, 3, 4, 2, 3, 3, 4, 4, 0, 3, 3, 2,
       4, 1, 3, 2, 4, 2, 2, 2, 4, 1, 4, 0, 0, 0, 3, 2, 3, 4, 0, 3, 0, 4,
       0, 3, 0, 3, 4, 4, 4, 1, 4, 1, 0, 2, 4, 2, 0, 3, 4, 2, 1, 4, 2, 4,
       0, 2, 4, 2, 3, 2, 2, 3, 2, 2, 4, 4, 2, 2, 3, 4, 4, 1, 2, 1, 4, 2,
       0, 4, 3, 4, 0, 4, 4, 1, 2, 1, 3, 2, 4, 1, 3, 3, 3, 4, 4, 2, 2, 0,
       2, 0, 0, 0, 1, 3, 2, 4, 1, 1, 1, 0, 4, 4, 3, 1, 3, 1, 3, 3, 2, 2,
       0, 1, 4, 3, 4, 3, 0, 1, 0, 0, 1, 1, 4, 3, 1, 4, 2, 1, 1, 3, 4, 2,
       0, 0, 4, 0, 2, 3, 4, 4, 0, 1, 0, 1, 2, 4, 0, 1, 2, 0, 3, 3, 0, 4,
       2, 3, 1, 2, 0, 0, 2, 1, 1, 3, 3, 3, 2, 0, 2, 2, 4, 2, 2, 2, 4, 0,
       3, 3, 1, 1, 0, 3, 4, 0, 1, 2, 3, 4, 1, 0, 4, 3, 4, 3, 3, 3, 1, 3,
       4, 2, 3, 4, 2, 1, 3, 0, 1, 1, 1, 0, 1, 2, 2, 3, 1, 3, 3, 1, 0, 2,
       1, 1, 0, 2, 0, 4, 2, 4, 0, 3, 4, 3, 0, 1, 2, 2, 4, 2, 0, 1, 0, 3,
       1, 0, 4, 3, 1, 1, 2, 3, 0, 3, 4, 2, 3, 0, 2, 3, 3, 3, 1, 4, 1, 4,
       3, 0, 2, 1, 4, 0, 4, 4, 1, 0, 2, 2, 2, 4, 0, 0, 3, 3, 2, 4, 2, 3,
       2, 2, 1, 2, 1, 3, 0, 1, 2, 4, 4, 2, 1, 2, 3, 2, 2, 0, 0, 2, 3, 3,
       2, 2, 4, 2, 1, 3, 2, 1, 1, 1, 0, 1, 2, 3, 4, 3, 1, 1, 1, 0, 1, 1,
       1, 1, 4, 1, 0, 2, 0, 2, 0, 3, 2, 4, 0, 0, 3, 2, 4, 4, 3, 3, 2, 1,
       1, 3, 0, 1, 4, 0, 1, 3, 0, 4, 3, 3, 4, 4, 2, 4, 0, 3, 0, 0, 4, 4,
       3, 1, 1, 1, 2, 1, 2, 1, 2, 4, 3, 1, 2, 1, 2, 1, 1, 4, 4, 4, 0, 0,
       0, 2, 2, 0, 4, 2, 0, 0, 2, 4, 3, 2, 2, 0, 1, 0, 2, 2, 4, 0, 1, 4,
       0, 1, 3, 4, 3, 4, 1, 2, 3, 0, 3, 3, 0, 1, 3, 0, 1, 2, 2, 1, 0, 1,
       0, 2, 0, 1, 0, 2, 1, 1, 0, 2, 3, 1, 2, 2, 1, 1, 1, 0, 4, 2, 2, 1,
       1, 3, 1, 0, 2, 0, 1, 2, 0, 0, 1, 3, 4, 3, 2, 1, 0, 0, 3, 0, 1, 0,
       1, 3, 4, 0, 1, 1, 4, 2, 4, 3, 2, 4, 0, 0, 2, 1, 2, 0, 4, 3, 1, 4,
       0, 0, 2, 0, 0, 0, 0, 4, 4, 0, 1, 3, 3, 3, 1, 1, 2, 2, 1, 2, 0, 1,
       0, 2, 1, 1, 4, 2, 4, 3, 2, 1, 0, 2, 2, 4, 3, 4, 0, 4, 3, 0, 3, 2,
       4, 0, 1, 0, 2, 1, 1, 4, 0, 3, 2, 2, 4, 4, 1, 3, 3, 1, 3, 4, 1, 0,
       1, 1, 2, 4, 4, 2, 2, 0, 3, 3, 0, 1, 0, 0, 3, 2, 3, 1, 3, 1, 2, 3,
       2, 4, 1, 2, 3, 0, 4, 4, 2, 0, 0, 1, 2, 2, 2, 3, 4, 2, 1, 1, 1, 1,
       1, 2, 4, 4, 1, 3, 4, 2, 2, 2, 3, 3, 4, 0, 0, 1, 4, 0, 1, 1, 1, 2,
       2, 0, 3, 3, 1, 3, 0, 4, 0, 2, 3, 1, 1, 1, 4, 1, 4, 1, 1, 2, 2, 1,
       0, 3, 2, 4, 3, 0, 2, 2, 4, 4, 2, 0, 2, 1, 2, 2, 0, 3, 0, 4, 2, 1,
       0, 2, 3, 2, 1, 1, 2, 1, 0, 4, 3, 2, 1, 0, 0, 3, 3, 0, 1, 4, 2, 1,
       3, 0, 4, 0, 2, 3, 4, 2, 4, 0, 2, 0, 2, 0, 0, 3, 4, 0, 2, 1, 4, 0,
       3, 0, 2, 4, 1, 3, 2, 0, 2, 0, 3, 2, 3, 3, 3, 4, 1, 1, 1, 3, 3, 0,
       0, 2, 4, 4, 0, 0, 4, 2, 3, 3, 4, 1, 2, 4, 0, 1, 2, 4, 3, 2, 3, 0,
       1, 4, 2, 2, 0, 1, 3, 2, 1, 0, 1, 4, 4, 4, 3, 3, 1, 0, 4, 4, 4, 1, 2, 0, 3, 4, 4, 1, 1, 1, 4, 4,
       0, 1, 3, 4, 2, 3, 3, 0, 0, 1, 1, 4, 3, 0, 1, 0, 3, 0, 0, 2, 2, 4,
       4, 2, 4, 0, 2, 2, 3, 4, 0, 0, 2, 1, 1, 1, 3, 2, 3, 3, 1, 2, 4, 0,
       3, 0, 1, 3, 2, 1, 0, 2, 4, 4, 1, 1, 1, 4, 1, 2, 2, 0, 1, 3, 3, 3,
       3, 2, 3, 4, 4, 0, 4, 4, 3, 3, 3, 1, 3, 4, 0, 4, 0, 0, 1, 0, 2, 3,
       0, 2, 3, 4, 1, 0, 3, 3, 4, 0, 2, 1, 1, 2, 0, 2, 2, 1, 4, 4, 0, 2,
       3, 1, 2, 1, 4, 2, 1, 4, 3, 3, 1, 4, 2, 4, 1, 4, 0, 2, 2, 4, 1, 0,
       1, 3, 2, 3, 2, 2, 0, 4, 3, 4, 4, 2, 3, 1, 3, 1, 0, 1, 4, 2, 1, 3,
       4, 4, 1, 0, 0, 1, 1, 1, 2, 0, 2, 2, 0, 2, 2, 3, 2, 0, 0, 2, 4, 2,
       4, 1, 4, 4, 0, 1, 1, 1, 0, 0, 2, 0, 0, 2, 0, 0, 4, 1, 1, 3, 2, 1,
       4, 0, 4, 1, 0, 0, 0, 4, 3, 0, 3, 2, 1, 2, 4, 1, 2, 1, 0, 0, 0, 0,
       1, 2, 2, 3, 2, 3, 1, 4, 1, 0, 1, 4, 4, 3, 2, 2, 3, 2, 4, 4, 2, 4,
       4, 2, 0, 0, 1, 0, 1, 4, 3, 0, 1, 3, 2, 4, 1, 4, 4, 4, 1, 0, 0, 3,
       1, 4, 1, 3, 3, 1, 1, 0, 1, 1, 0, 4, 4, 2, 2, 0, 3, 0, 2, 2, 2, 1,
       0, 3, 3, 0, 3, 1, 1, 1, 2, 1, 0, 0, 3, 4, 0, 4, 4, 4, 4, 0, 4, 1,
       0, 0, 2, 3, 3, 3, 2, 3, 2, 0, 0, 1, 0, 2, 1, 4, 2, 1, 4, 0, 4, 4,
       2, 1, 3, 0, 0, 4, 2, 0, 1, 3, 1, 3, 3, 3, 0, 0, 0, 3, 1, 2, 2, 3,
       2, 0, 1, 4, 2, 4, 3, 1, 1, 3, 1, 3, 4, 1, 0, 3, 0, 3, 2, 1, 4, 3,
       0, 2, 0, 1, 4, 3, 2, 3, 2, 1, 4, 4, 1, 4, 4, 1, 4, 4, 2, 4, 1, 4,
       2, 0, 3, 3, 1, 1, 0, 3, 3, 0, 1, 4, 4, 4, 0, 0, 1, 4, 3, 0, 3, 2,
       0, 1, 2, 4, 1, 1, 2, 1, 4, 0, 0, 2, 0, 2, 4, 3, 3, 1, 4, 1, 1, 1,
       3, 3, 0, 0, 0, 4, 0, 4, 0, 1, 0, 2, 3, 0, 2, 1, 2, 0, 4, 3, 3, 1,
       1, 1, 1, 2, 2, 2, 4, 2, 4, 4, 2, 1, 1, 1, 0, 2, 0, 4, 3, 3, 1, 0,
       4, 4, 0, 3, 3, 0, 3, 4, 4, 3, 3, 0, 3, 0, 4, 1, 3, 2, 1, 4, 2, 3,
       2, 3, 4, 2, 4, 0, 4, 4, 3, 4, 1, 1, 1, 1, 2, 2, 4, 3, 2, 4, 3, 0,
       3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 1, 0, 2, 3, 4, 0, 4, 1, 0,
       1, 4, 1, 4, 2, 4, 3, 1, 0, 2, 2, 4, 3, 1, 2, 0, 3, 1, 3, 3, 1, 2,
       2, 1, 4, 1, 2, 4, 1, 2, 2, 1, 0, 4, 1, 3, 4, 1, 1, 1, 1, 4, 0, 4,
       1, 4, 4, 4, 0, 0, 0, 1, 0, 3, 3, 0, 2, 2, 1, 0, 0, 3, 1, 3, 0, 2,
       3, 1, 3, 4, 3, 2, 0, 4, 4, 3, 2, 0, 1, 3, 0, 4, 3, 4, 0, 3, 2, 0,
       3, 0, 1, 2, 3, 3, 0, 4, 4, 3, 3, 2, 1, 0, 0, 3, 2, 4, 2, 4, 0, 4,
       0, 3, 4, 1, 1, 4, 4, 4, 3, 2, 1, 3, 2, 4, 4, 1, 0, 1, 4, 0, 4, 3,
       4, 1, 3, 4, 1, 2, 1, 4, 3, 1, 2, 1, 1, 1, 4, 2, 0, 4, 3, 0, 2, 1,
       2, 1, 3, 1, 2, 0, 2, 0, 1, 1, 3, 3, 2, 4, 3, 2, 2, 4, 3, 1, 1, 1,
       4, 3, 3, 1, 4, 2, 1, 0, 4, 1, 2, 4, 0, 4, 2, 2, 1, 2, 3, 2, 2, 4,
       2, 2, 0, 1, 3, 0, 1, 3, 4, 3, 1, 1, 3, 2, 0, 3, 0, 4, 2, 2, 1, 2,
       0, 4, 3, 4, 3, 3, 0, 3, 0, 0, 1, 0, 4, 2, 2, 3, 4, 0, 0, 2, 1, 3,
       4, 2, 0, 4, 2, 4, 1, 1, 0, 3, 0, 1, 1, 2, 2, 4, 3, 0, 3, 2, 0, 2,
       0, 3, 4, 0, 3, 2, 4, 1, 1, 0, 2, 4, 4, 3, 4, 1, 3, 0, 2, 3, 0, 1,
       4, 3, 1, 0, 1, 4, 4, 0, 2, 0, 4, 4, 1, 1, 3, 0, 2, 1, 0, 0, 2, 4,
       3, 1, 3, 4, 2, 1, 3, 3, 1, 1, 3, 3, 2, 4, 4, 4, 1, 1, 2, 4, 4, 3,
       3, 3, 3, 0, 3, 0, 2, 0, 3, 0, 2, 2, 2, 1, 2, 2, 4, 2, 0, 2, 3, 0,
       0, 2, 0, 0, 1, 2, 4, 2, 2, 0, 0, 2, 0, 3, 0, 2, 2, 0, 2, 0, 4, 3,
       2, 2, 3, 3, 4, 0, 0, 3, 2, 0, 2, 4, 1, 3, 3, 1, 4, 1, 3, 1, 2, 2,
       2, 0, 4, 2, 4, 3, 1, 1, 3, 4, 2, 4, 1, 4, 4, 4, 4, 2, 4, 1, 2, 0,
       4, 0, 1, 2, 0, 4, 0, 0, 2, 1, 1, 1, 4, 3, 0, 4, 0, 1, 0, 0, 1, 3, 4, 3, 0, 2, 2, 1, 4, 4, 1, 0,
       2, 2, 4, 4, 0, 3, 4, 2, 3, 2, 1, 4, 2, 1, 4, 1, 2, 4, 3, 3, 1, 0,
       2, 0, 4, 0, 2, 4, 0, 3, 3, 1, 4, 0, 2, 0, 3, 1, 1, 3, 1, 2, 2, 3,
       1, 3, 0, 4, 3, 0, 2, 0, 3, 4, 2, 4, 3, 4, 2, 0, 3, 4, 2, 2, 0, 3,
       1, 3, 2, 4, 0, 3, 3, 2, 0, 1, 1, 1, 3, 2, 0, 1, 0, 3, 3, 0, 3, 4,
       1, 4, 1, 3, 2, 1, 4, 0, 1, 0, 3, 0, 2, 4, 1, 2, 3, 0, 2, 3, 1, 0,
       0, 2, 4, 4, 4, 0, 1, 2, 4, 4, 1, 0, 1, 1, 3, 0, 3, 4, 3, 4, 0, 2,
       2, 3, 0, 2, 0, 4, 0, 4, 2, 1, 1, 0, 0, 1, 4, 3, 0, 2, 4, 1, 0, 4,
       1, 0, 3, 4, 0, 3, 3, 3, 4, 0, 3, 3, 4, 2, 0, 2, 2, 2, 2, 2, 0, 2,
       0, 3, 4, 1, 3, 4, 1, 3, 4, 1, 4, 1, 0, 4, 2, 1, 1, 1, 2, 1, 1, 4, 3, 1,
       0, 0, 1, 0, 3, 1, 2, 4, 0, 3, 0, 2, 4, 2, 4, 4, 3, 0, 0, 4, 4, 2,
       2, 0, 4, 4, 2, 2, 3, 0, 2, 0, 0, 4, 3, 3, 4, 2, 4, 1, 0, 4, 3, 1,
       3, 2, 2, 0, 4, 3, 2, 4, 2, 4, 0, 1, 1, 4, 2, 0, 0, 0, 2, 2, 4, 1,
       1, 1, 1, 3, 4, 3, 1, 1, 4, 0, 0, 4, 0, 3, 4, 3, 2, 3, 0, 2, 3, 1,
       0, 0, 1, 1, 2, 1, 0, 0, 3, 2, 3, 0, 3, 4, 3, 3, 2, 2, 2, 4, 3, 1,
       4, 4, 1, 3, 2, 4, 0, 0, 1, 0, 2, 3, 4, 2, 1, 4, 3, 4, 1, 3, 4, 2,
       2, 2, 0, 0, 1, 0, 1, 4, 4, 3, 3, 2, 4, 4, 1, 3, 4, 4, 0, 1, 3, 1,
       4, 0, 2, 3, 1, 3, 3, 0, 2, 0, 1, 2, 0, 2, 3, 2, 4, 0, 1, 1, 1, 0,
       1, 0, 1, 0, 1, 4, 1, 1, 1, 3, 0, 1, 3, 3, 1, 4, 4, 1, 2, 1, 3, 1,
       3, 3, 2, 3, 1, 2, 1, 4, 0, 2, 4, 2, 0, 2, 3, 1, 1, 1, 4, 0, 0, 1,
       2, 0, 0, 0, 4, 4, 3, 3, 0, 2, 0, 4, 4, 3, 3, 4, 2, 1, 4, 1, 2, 4,
       2, 2, 4, 3, 1, 0, 1, 2, 4, 2, 1, 3, 0, 2, 3, 4, 1, 4, 3, 2, 0, 3,
       1, 4, 3, 1, 0, 2, 4, 3, 3, 3, 3, 3, 3, 0, 0, 2, 4, 1, 3, 1, 0, 2,
       1, 0, 2, 0, 3, 4, 4, 1, 2, 2, 0, 4, 3, 2, 2, 1, 0, 0, 3, 2, 0, 1,
       2, 2, 4, 4, 4, 3, 4, 0, 4, 4, 0, 1, 1, 4, 3, 2, 2, 3, 2, 3, 0, 2,
       2, 2, 1, 0, 0, 0, 1, 1, 1, 4, 2, 1, 1, 1, 2, 2, 0, 4, 3, 0, 0, 3,
       4, 1, 0, 2, 4, 1, 3, 4, 4, 0, 2, 2, 2, 4, 2, 1, 3, 4, 0, 4, 2, 0,
       2, 2, 4, 0, 2, 2, 1, 1, 4, 2, 0, 3, 0, 0, 2, 1, 2, 0, 0, 3, 1, 0,
       2, 1, 0, 4, 0, 2, 3, 3, 4, 1, 1, 4, 3, 4, 0, 0, 3, 2, 2, 3, 2, 1,
       2, 3, 3, 2, 3, 1, 3, 4, 1, 4, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 0, 3,
       1, 4, 2, 2, 0, 3, 1, 2, 1, 2, 4, 3, 1, 2, 1, 0, 1, 2, 1, 3, 0, 2,
       4, 3, 2, 1, 4, 4, 0, 2, 0, 4, 0, 0, 3, 1, 3, 0, 0, 2, 4, 1, 4, 2,
       1, 2, 4, 1, 1, 2, 2, 1, 2, 2, 4, 2, 4, 3, 1, 3, 3, 4, 2, 1, 4, 2,
       1, 3, 1, 0, 3, 4, 1, 4, 0, 0, 3, 0, 2, 1, 1, 3, 1, 0, 4, 2, 0, 3,
       4, 1, 0, 2, 2, 0, 4, 3, 4, 3, 0, 1, 4, 4, 3, 3, 2, 0, 4, 0, 2, 3,
       1, 2, 3, 3, 1, 1, 0, 4, 4, 4, 0, 0, 4, 1, 2, 2, 0, 4, 2, 0, 3, 2,
       2, 3, 2, 1, 4, 0, 3, 0, 1, 1, 0, 1, 4, 1, 1, 4, 1, 2, 2, 0, 0, 4,
       3, 4, 1, 2, 4, 2, 2, 2, 0, 4, 3, 0, 3, 3, 2, 2, 3, 0, 4, 4, 4, 3,
       0, 4, 0, 1, 4, 3, 2, 4, 4, 0, 4, 1, 3, 4, 3, 4, 2, 3, 0, 1, 4, 1,
       3, 4, 1, 1, 4, 1, 4, 1, 3, 0, 2, 1, 2, 1, 1, 4, 1, 4, 2, 3, 1, 2,
       1, 2, 3, 1, 4, 2, 0, 4, 1, 4, 2, 1, 0, 1, 3, 1, 4, 0, 1, 3, 4, 1,
       1, 0, 4, 3, 1, 1, 1, 1, 4, 2, 1, 3, 2, 1, 2, 3, 4, 1, 1, 4, 2, 0,
       2, 2, 4, 1, 4, 3, 1, 4, 0, 1, 4, 0, 0, 4, 0, 0, 3, 2, 4, 1, 2, 4,
       3, 1, 2, 1, 2, 0, 1, 4, 0, 1, 1, 0, 2, 2, 1, 3, 0, 3, 4, 4, 4, 3,
       3, 3, 2, 0, 3, 2, 2, 2, 4, 0, 0, 2, 3, 0, 0, 2, 3, 1, 0, 2, 0, 4,
       4, 3, 3, 0, 3, 0, 3, 4, 3, 4, 1, 1, 3, 0, 4, 3, 2, 3, 3, 3, 1, 0,
       0, 1, 1, 4, 3, 2, 2, 3, 3, 3, 4, 2, 2, 2, 1, 3, 2, 3, 1, 4, 0, 3,
       1, 3, 0, 0, 3, 3, 3, 1, 3, 0, 4, 3, 3, 4, 1, 2, 3, 2, 0, 1, 3, 0,
       3, 3, 2, 1, 4, 1, 3, 2, 3, 2, 4, 3, 2, 3, 2, 2, 3, 1, 4, 4, 0, 1,
       2, 2, 0, 0, 2, 1, 4, 2, 4, 0, 3, 3, 2, 1, 1, 3, 2, 0, 1, 2, 2, 1,
       0, 3, 4, 1, 1, 2, 1, 1, 4, 2, 0, 3, 3, 0, 4, 0, 3, 0, 2, 3, 0, 3,
       0, 1, 2, 0, 0, 4, 1, 1, 4, 4, 3, 0, 4, 0, 4, 0, 0, 2, 2, 3, 4, 1,
       4, 1, 0, 4, 4, 3, 4, 1, 2, 0, 3, 3, 1, 3, 0, 2, 4, 0, 3, 2, 0, 3,
       0, 1, 4, 3, 3, 4, 3, 4, 4, 4, 3, 4, 1, 4, 4, 3, 4, 3, 2, 4, 2, 2,
       2, 4, 3, 0, 1, 2, 1, 0, 3, 4, 3, 3, 4, 0, 1, 2, 3, 3, 3, 0, 0, 2, 0, 2, 1, 2, 0, 0, 4, 2, 3, 4,
       4, 3, 0, 1, 2, 1, 1, 3, 0, 1, 0, 0, 2, 2, 2, 4, 2, 2, 4, 0, 4, 4,
       1, 2, 3, 1, 0, 1, 0, 1, 1, 2, 0, 4, 2, 0, 3, 3, 4, 1, 2, 2, 3, 2,
       3, 0, 2, 1, 3, 1, 0, 2, 2, 4, 0, 2, 4, 4, 3, 0, 3, 4, 1, 2, 2, 4,
       3, 1, 4, 3, 0, 4, 4, 2, 4, 4, 0, 1, 4, 4, 1, 0, 3, 1, 4, 2, 0, 0,
       3, 1, 4, 3, 1, 1, 1, 1, 4, 1, 2, 4, 3, 4, 2, 4, 0, 0, 3, 1, 2, 1,
       3, 4, 1, 3, 1, 1, 2, 2, 2, 4, 3, 3, 1, 1, 0, 0, 3, 0, 0, 1, 0, 4,
       4, 2, 0, 1, 3, 0, 3, 3, 2, 3, 0, 1, 3, 4, 2, 1, 0, 4, 1, 3, 4, 1,
       1, 2, 1, 2, 2, 2, 0, 3, 2, 3, 0, 1, 1, 4, 4, 1, 3, 2, 1, 4, 1, 1,
       2, 1, 2, 0, 1, 0, 4, 0, 4, 1, 1, 3, 1, 4, 4, 2, 2, 1, 1, 1, 2, 4,
       0, 3, 3, 0, 4, 0, 0, 4, 4, 4, 3, 1, 0, 3, 0, 0, 1, 3, 1, 2, 0, 3,
       2, 4, 3, 2, 1, 3, 3, 1, 2, 2, 0, 2, 3, 4, 1, 2, 1, 1, 1, 4, 3, 2,
       4, 2, 2, 0, 4, 2, 1, 2, 1, 1, 4, 3, 1, 0, 0, 0, 0, 1, 0, 0, 4, 2,
       1, 1, 1, 1, 4, 3, 4, 3, 2, 1, 0, 3, 2, 4, 4, 2, 2, 2, 4, 1, 1, 2,
       2, 1, 1, 3, 0, 1, 3, 3, 1, 3, 2, 1, 1, 4, 4, 4, 1, 1, 0, 1, 1, 2,
       4, 1, 4, 1, 2, 4, 1, 0, 3, 0, 2, 2, 0, 0, 0, 3, 3, 0, 1, 0, 3, 3,
       4, 4, 4, 4, 1, 1, 1, 2, 3, 1, 3, 0, 0, 4, 4, 0, 3, 1, 3, 0, 1, 1,
       3, 4, 4, 4, 0, 2, 3, 0, 3, 2, 0, 1, 0, 3, 0, 2, 0, 1, 3, 0, 3, 1,
       0, 1, 1, 1, 1, 3, 4, 0, 1, 4, 4, 0, 0, 0, 0, 3, 4, 0, 4, 4, 2, 4,
       1, 0, 2, 4, 2, 0, 2, 4, 1, 0, 4, 3, 3, 3, 2, 1, 1, 4, 3, 0, 0, 0,
       3, 4, 3, 2, 4, 2, 4, 4, 3, 2, 4, 1, 0, 1, 2, 0, 1, 0, 2, 3, 4, 3,
       4, 2, 0, 2, 0, 4, 2, 3, 4, 2, 3, 3, 4, 4, 1, 0, 3, 1, 0, 1, 3, 3,
       1, 2, 4, 3, 3, 1, 4, 2, 1, 1, 2, 1, 1, 4, 4, 4, 1, 4, 2, 2, 1, 0,
       0, 3, 0, 1, 3, 0, 3, 3, 0, 3, 1, 2, 2, 4, 1, 2, 4, 0, 3, 0, 4, 0,
       4, 0, 1, 3, 4, 3, 3, 4, 1, 0, 0, 2, 2, 0, 2, 1, 1, 0, 1, 3, 4, 1,
       3, 2, 1, 2, 3, 4, 1, 1, 4, 0, 3, 3, 1, 0, 2, 4, 4, 3, 4, 2, 0, 3,
       1, 2, 0, 3, 1, 2, 1, 0, 2, 0, 0, 0, 4, 3, 3, 4, 3, 0, 1, 0, 2, 0,
       0, 1, 3, 0, 4, 4, 0, 2, 1, 1, 0, 0, 0, 0, 0, 3, 0, 2, 2, 3, 2, 1,
       2, 4, 3, 1, 1, 4, 1, 1, 2, 0, 1, 3, 3, 1, 1, 0, 1, 3, 1, 0, 4, 4,
       0, 3, 3, 0, 4, 3, 1, 1, 3, 0, 3, 1, 4, 0, 3, 4, 2, 4, 2, 1, 1, 2,
       3, 2, 0, 3, 3, 0, 2, 4, 3, 0, 1, 4, 2, 0, 1, 4, 4, 2, 2, 1, 0, 1,
       2, 1, 1, 2, 3, 3, 4, 4, 2, 3, 3, 3, 0, 3, 2, 3, 1, 1, 1, 3, 1, 0,
       3, 4, 1, 0, 2, 2, 1, 0, 0, 4, 4, 1, 3, 0, 0, 4, 0, 2, 2, 0, 0, 3,
       0, 2, 1, 4, 0, 0, 2, 4, 3, 0, 4, 0, 1, 1, 1, 4, 4, 4, 1, 2, 0, 0,
       1, 4, 0, 1, 2, 3, 0, 2, 1, 0, 3, 4, 2, 2, 3, 4, 0, 0, 4, 2, 2, 2,
       4, 4, 2, 3, 2, 4, 0, 0, 4, 2, 4, 1, 3, 2, 0, 4, 3, 3, 1, 0, 1, 1,
       3, 4, 1, 0, 3, 3, 0, 1, 4, 0, 4, 0, 3, 3, 1, 0, 4, 2, 0, 3, 2, 3,
       2, 0, 0, 3, 3, 1, 0, 4, 4, 4, 2, 3, 0, 2, 3, 0, 0, 3, 4, 2, 3, 1,
       4, 2, 1, 1, 3, 1, 2, 3, 3, 0, 3, 0, 4, 4, 4, 3, 2, 2, 0, 0, 0, 0,
       0, 0, 3, 0, 2, 3, 4, 3, 1, 1, 3, 1, 1, 4, 3, 3, 1, 3, 1, 2, 1, 2,
       4, 4, 0, 2, 2, 2, 2, 3, 2, 2, 2, 0, 2, 1, 1, 2, 1, 4, 4, 3, 4, 3,
       1, 2, 1, 3, 1, 3, 1, 4, 2, 4, 1, 0, 3, 1, 1, 0, 3, 2, 4, 4, 2, 1,
       1, 2, 4, 0, 1, 0, 3, 4, 4, 2, 3, 2, 4, 3, 0, 3, 0, 2, 0, 0, 2, 4,
       1, 1, 0, 4, 1, 1, 2, 2, 4, 0, 2, 0, 0, 0, 1, 2, 1, 4, 3, 4, 4, 4,
       2, 3, 4, 4, 3, 0, 1, 1, 4, 2, 4, 3, 1, 4, 0, 4, 0, 0, 0, 2, 0, 1,
       3, 1, 4, 0, 4, 1, 0, 1, 1, 2, 1, 2, 2, 4, 2, 1, 3, 2, 3, 3, 1, 3, 1, 1, 3, 3, 3, 0, 2, 2, 3, 4,
       3, 2, 4, 1, 2, 0, 3, 2, 1, 4, 0, 4, 4, 3, 2, 1, 1, 3, 3, 1, 1, 3,
       2, 3, 2, 0, 4, 3, 4, 2, 4, 1, 1, 3, 1, 2, 0, 0, 4, 2, 3, 3, 2, 3,
       2, 1, 4, 2, 2, 3, 1, 4, 3, 0, 0, 1, 4, 3, 3, 1, 4, 4, 1, 1, 2, 4,
       2, 1, 2, 2, 0, 1, 3, 2, 0, 0, 3, 2, 4, 4, 2, 4, 4, 3, 4, 2, 4, 0,
       3, 4, 3, 1, 3, 0, 4, 4, 4, 2, 3, 4, 3, 0, 0, 3, 2, 4, 3, 2, 3, 3,
       0, 3, 0, 3, 0, 2, 1, 2, 4, 0, 1, 4, 2, 0, 3, 4, 4, 1, 3, 4, 4, 2,
       4, 3, 1, 4, 2, 0, 2, 1, 1, 2, 1, 2, 4, 3, 3, 4, 4, 1, 1, 3, 0, 0,
       2, 3, 1, 0, 1, 2, 3, 1, 3, 4, 3, 2, 0, 1, 4, 3, 2, 3, 0, 4, 4, 3,
       0, 3])
# lambda: 1 1.5 2 2.5 3
interval_list3 = np.array([3.80933356e-01, 4.48616509e-02, 1.51826788e-01, 1.08763375e+00,
       6.13473649e-01, 1.72771443e-03, 1.67411389e-02, 8.32637986e-01,
       1.20479945e+00, 2.59857664e-02, 1.02541935e-01, 7.24185003e-03,
       7.74840236e-01, 8.01049771e-01, 2.29362635e-01, 1.10361689e-01,
       4.43184977e-01, 6.68374943e-01, 1.72939503e-01, 5.39382040e-02,
       4.85915355e-01, 3.83439042e-01, 3.46246218e-01, 6.53979959e-01,
       7.13953709e-01, 3.05977753e-01, 2.15280832e-02, 7.40113900e-02,
       4.07306497e-01, 2.46261074e-02, 1.60550577e-01, 2.27344263e-01,
       8.33372757e-01, 1.18866172e-01, 3.49211360e-01, 7.60188101e-01,
       6.48071081e-01, 3.02894351e-02, 1.74449169e-02, 1.22138201e-01,
       2.59634821e-01, 1.09466158e-01, 3.40436411e-01, 1.39148068e-01,
       2.90695443e+00, 1.25982357e-03, 6.03017641e-01, 1.34079034e+00,
       1.49842380e-01, 1.47136893e-01, 1.10085779e+00, 2.81966118e-01,
       1.41741226e-01, 1.15039196e-02, 2.39845733e-01, 1.39709627e-02,
       3.41313086e-01, 1.99668724e-01, 8.41853236e-01, 6.40142564e-02,
       5.17260141e-01, 5.78026033e-01, 4.42258310e-01, 5.57294527e-01,
       1.11212526e+00, 1.17831953e-01, 5.92306159e-01, 2.34727048e-01,
       4.52437652e-01, 2.44886320e-01, 2.23350200e-01, 5.11415467e-01,
       1.16016466e+00, 4.60429924e-01, 6.61651227e-02, 2.92845441e-02,
       6.10322816e-01, 3.86609520e-01, 1.47275883e-02, 4.93187732e-01,
       3.57344363e-01, 1.42049640e-01, 6.21810471e-02, 7.99462882e-01,
       2.74960851e-01, 1.09730942e-01, 3.55424856e-01, 1.84831337e-02,
       8.76567499e-02, 1.29831322e+00, 4.78087475e-01, 2.59249954e-01,
       3.32051853e-01, 1.25707571e-01, 3.75564958e-02, 1.23559830e+00,
       1.05039998e-01, 2.83295480e-01, 5.64464960e-01, 7.68660403e-01,
       2.70489296e-01, 5.01280099e-02, 3.05421633e-01, 2.02812910e-01,
       1.16708230e-01, 3.69782368e-01, 1.60647269e+00, 1.01970975e-01,
       2.33823143e-01, 7.60167164e-02, 1.23766724e+00, 5.41321034e-02,
       3.82090226e-01, 7.09286090e-02, 4.73061330e-01, 1.57734816e+00,
       1.03579714e-01, 4.06837123e-01, 1.27472512e-02, 4.25252496e-01,
       3.02578632e-01, 2.82700643e-01, 5.41710215e-01, 8.03336028e-01,
       6.46304549e-01, 3.78144295e-01, 1.60940568e-01, 1.51614490e-01,
       1.55151634e+00, 1.20932170e+00, 1.56995047e-01, 1.91806652e+00,
       6.47955927e-02, 9.32628176e-02, 2.62709487e-01, 1.20842150e+00,
       2.53943009e-01, 1.14188758e-01, 3.05663970e-01, 4.64372009e-01,
       1.10162961e-01, 1.10399117e-01, 1.47131561e-02, 2.69566040e-01,
       5.70976427e-02, 2.77594756e-01, 2.92317099e-01, 2.63629492e-01,
       5.28251983e-01, 7.45528817e-01, 6.70838409e-01, 1.04192694e-01,
       9.52066168e-01, 5.03150957e-01, 1.53577883e-01, 6.29166463e-02,
       1.30687597e-01, 7.84298966e-01, 2.77435644e-01, 1.08813088e-01,
       4.45197485e-01, 1.23944130e-01, 5.76175571e-01, 5.35897395e-03,
       2.80246624e-01, 7.80994865e-01, 1.22547864e-02, 4.28080491e-01,
       3.55902998e-01, 4.67989301e-01, 5.67848103e-01, 7.77472725e-02,
       6.06311745e-01, 1.85825907e-01, 3.34503887e-01, 4.76932545e-01,
       8.68581164e-01, 2.45920536e-02, 1.27799442e-01, 2.33687534e-01,
       1.02429233e-01, 5.08304853e-01, 1.36293336e+00, 1.03559683e-01,
       8.65609660e-02, 2.25610781e-01, 1.26189603e-01, 2.45754065e-01,
       2.05112958e-01, 1.41706550e-01, 1.15696738e-02, 3.26680128e-01,
       5.18871028e-01, 4.71027758e-03, 5.25375581e-02, 7.31979498e-02,
       5.30822620e-02, 4.55567205e-01, 1.49541653e-01, 5.62387053e-02])
interval_list1 = np.array([7.74070519e-02, 2.45522782e+00, 2.00377727e+00, 2.63865654e+00,
       4.33720424e-01, 1.30479073e+00, 3.45113599e-01, 2.31324932e+00,
       3.48954313e+00, 1.54845071e+00, 1.15292674e-01, 2.27404074e+00,
       3.21678727e-01, 3.28956510e-01, 7.98653754e-01, 2.33793777e-01,
       5.04533468e-01, 1.31213394e+00, 6.82483170e-01, 5.59000112e-01,
       2.08239430e+00, 1.35733196e+00, 2.56857599e-01, 9.07753208e-01,
       2.74223030e-01, 6.90522001e-01, 3.93910337e-01, 5.86524962e-02,
       8.95486384e-01, 3.29889885e-01, 5.56923600e-01, 3.11201501e+00,
       9.15974744e-02, 2.96885019e+00, 1.38054637e-01, 2.31714346e-03,
       9.19637658e-01, 6.53853462e-01, 1.50625847e-01, 1.05442422e+00,
       1.67469226e+00, 5.32143133e-02, 2.30356904e-02, 1.57025121e+00,
       8.36914454e-01, 8.48676787e-01, 1.32353319e+00, 1.04902719e-01,
       1.73560011e+00, 9.56771763e-01, 1.68900092e+00, 1.70401926e-01,
       1.36207210e+00, 8.64037679e-01, 2.07911078e+00, 8.86898152e-01,
       6.54732679e-01, 7.99673740e-01, 6.17354118e-01, 5.66291470e+00,
       5.62552111e-02, 4.48396003e-01, 2.87778172e-02, 1.16214157e+00,
       1.04451345e+00, 3.23903173e-01, 1.06586649e+00, 8.09824736e-01,
       1.06044488e+00, 7.61249818e-01, 7.09844327e-02, 2.31843623e-01,
       1.57812513e-01, 1.36714559e+00, 1.30276525e+00, 1.80112049e+00,
       1.25070185e+00, 3.04035592e-01, 2.26078671e-01, 8.45479322e-01,
       1.33198094e-02, 3.80161880e-01, 2.75690464e-01, 1.60966314e-01,
       1.76182127e+00, 1.51240730e+00, 6.07879032e-01, 2.45237418e-01,
       9.26224906e-01, 2.68230266e+00, 2.04104750e-01, 4.04663128e-01,
       6.34695910e-02, 1.08490183e+00, 2.49900079e-01, 7.67414399e-02,
       1.73404458e-02, 4.65988858e-02, 8.39501884e-02, 1.45367334e+00,
       1.17462727e+00, 2.28904023e+00, 9.01072559e-01, 2.93023717e+00,
       2.49114297e-01, 5.82481349e+00, 2.43835497e+00, 1.65791311e-01,
       2.06813998e+00, 1.02475042e-01, 2.00350811e-01, 1.17707149e+00,
       8.70834119e-02, 1.01343284e+00, 4.01275071e-01, 2.79255731e-01,
       1.11533624e+00, 3.11902307e+00, 2.99390641e+00, 2.32123281e-01,
       1.01775826e+00, 2.00188666e+00, 6.92733513e-04, 1.69821886e+00,
       8.85845262e-01, 6.57795503e-01, 7.91869604e-01, 6.07019762e-01,
       1.53378119e+00, 4.71722236e-01, 1.08200681e-01, 1.76134084e+00,
       1.73951684e+00, 4.14681973e-01, 1.12316462e+00, 2.34386203e-01,
       8.60739099e-01, 5.76020618e-01, 3.79167287e-01, 4.45721274e-01,
       3.90242352e-01, 6.72047455e-01, 1.99345389e+00, 1.74085350e-01,
       4.35556586e-01, 5.59926763e-01, 5.00073606e-02, 2.02366039e+00,
       9.95134946e-01, 3.95074527e-01, 2.76393458e-02, 6.63804104e-01,
       4.36234614e-01, 4.00797554e-01, 8.38599295e-01, 2.48385023e-01,
       8.02588534e-01, 1.27119288e+00, 2.95837743e-02, 1.90659545e+00,
       1.69169993e-01, 3.89177832e+00, 1.64404210e+00, 8.64795350e-01,
       2.28364354e-01, 1.02776311e+00, 5.92208580e+00, 2.64615759e+00,
       1.05527799e+00, 1.49351760e-01, 2.97338516e-02, 2.27493894e-01,
       1.27729778e+00, 2.79331393e-01, 8.28447584e-01, 8.58658070e-01,
       6.96984999e-01, 1.58154311e+00, 1.13758226e+00, 2.57784833e+00,
       2.69830674e+00, 9.68127121e-01, 9.28234062e-01, 3.99525266e-02,
       6.33944301e-01, 1.35796633e-01, 7.33528248e-01, 2.66787953e+00,
       9.21594256e-02, 1.46086685e+00, 9.73273867e-01, 6.25241596e-01,
       1.31265892e+00, 6.09114389e-01, 2.51010000e-01, 4.82440045e-01,
       7.41119100e-01, 1.45872385e+00, 1.24304023e-01, 1.38566407e+00])
interval_list2 = np.array([1.31934940e-01, 2.52296878e-02, 1.44911054e+00, 1.12669561e-01,
       2.36816994e-01, 1.77105951e-01, 2.52066865e-02, 2.82393064e-01,
       9.89327478e-02, 6.28156686e-01, 3.73457897e-01, 2.19900427e-01,
       4.98734555e-02, 1.88667010e-01, 3.10489087e-01, 1.42439438e-01,
       1.13342154e-01, 5.18823518e-01, 4.06342990e-04, 6.26596872e-01,
       4.17436472e-02, 5.92119756e-01, 1.02331592e+00, 2.52727010e-01,
       1.92053170e-01, 1.65285058e-01, 2.14663539e-01, 1.46240801e-01,
       2.03526556e-01, 9.07937793e-02, 3.18356166e-01, 6.05545330e-01,
       5.86302289e-01, 5.18358994e-01, 1.60826378e-01, 9.75664789e-02,
       3.70461922e-02, 2.05850603e-01, 1.21888955e-01, 1.26774536e+00,
       4.91688312e-02, 7.88894573e-02, 7.25510313e-03, 2.56867113e-01,
       5.24383469e-01, 6.93299096e-01, 1.28342952e-01, 5.00294715e-02,
       1.04581818e+00, 3.22977702e-01, 2.18311787e-01, 2.36989709e-01,
       1.37436701e+00, 2.26622350e-01, 9.85190238e-01, 3.42499615e-01,
       1.43631428e+00, 1.17155365e+00, 2.23184970e-01, 2.01502716e+00,
       4.96097693e-01, 9.84868784e-03, 3.36533407e-01, 2.34851195e-01,
       3.44832613e-01, 3.26703655e-01, 8.46125410e-01, 9.45772085e-01,
       1.09098046e-01, 1.15721362e+00, 8.37532310e-01, 2.46701058e-02,
       1.76751655e+00, 4.93434189e-01, 3.96057991e-01, 2.22938751e-01,
       8.00956711e-02, 3.75613334e+00, 1.73356488e-01, 1.29115182e-01,
       5.10555216e-01, 1.79320276e-02, 1.37252613e+00, 6.88824981e-01,
       1.48109673e+00, 4.59279047e-01, 1.39863613e-01, 3.68019373e-01,
       5.22654763e-01, 6.41269581e-02, 5.08287366e-02, 1.24471462e+00,
       1.13339815e+00, 5.49125297e-01, 1.74612411e-02, 6.54823356e-01,
       4.38674201e-04, 7.75105454e-01, 8.99821709e-02, 7.45448095e-01,
       1.02608632e-01, 1.37531774e-01, 1.19566509e+00, 6.81426280e-01,
       5.23263271e-01, 8.06237900e-02, 1.98954415e-01, 1.24858319e-01,
       1.88205235e+00, 3.05241155e-02, 2.38422675e-01, 5.65762768e-01,
       3.46963420e+00, 1.92930321e-02, 1.86045236e-01, 1.65440553e-01,
       6.36531383e-03, 7.58129153e-02, 1.07664160e-01, 3.79542106e-01,
       1.96424168e-01, 2.03167429e-01, 9.11704779e-01, 1.45606664e-01,
       2.28213661e-01, 1.80019318e-01, 2.14304291e-01, 1.75179054e+00,
       4.00650286e-01, 1.67019069e-01, 7.04668015e-02, 8.96550385e-01,
       1.42823288e-01, 7.64191200e-01, 2.48993531e+00, 1.98875922e-02,
       1.75881670e-01, 2.34017133e-01, 3.58097555e-03, 1.83871972e+00,
       7.87845309e-02, 8.09887007e-01, 1.22378071e-01, 2.53937285e+00,
       1.21805254e+00, 8.89943408e-03, 6.10880891e-01, 8.82307317e-01,
       9.03365370e-01, 3.62926559e-01, 2.69853559e-02, 2.10335773e-01,
       4.60655508e-01, 1.95732027e-01, 1.52449156e-01, 1.81088144e-02,
       9.27222623e-01, 2.93069533e-01, 8.00937745e-01, 4.64890845e-01,
       4.76147158e-01, 3.08766295e-01, 1.72324131e-01, 7.26836461e-01,
       4.01324173e-01, 2.73683904e-01, 5.22661385e-01, 4.78822513e-02,
       4.93598425e-03, 4.68243716e-01, 2.54601156e-01, 3.27307245e-01,
       1.08922445e+00, 2.34233006e-01, 8.18250861e-01, 3.65504990e-02,
       3.19742011e-01, 5.57404358e-01, 7.33217081e-01, 1.86548081e-01,
       9.66979410e-03, 4.92273596e-01, 5.16129873e-03, 1.65485087e+00,
       2.27019506e-01, 2.18616410e-01, 5.92134318e-02, 6.90921155e-01,
       2.42186779e-01, 9.26816771e-01, 1.02100229e-01, 1.88046797e-01,
       6.32009495e-01, 1.30062971e+00, 7.58072623e-01, 3.27415358e-02,
       4.01159447e-01, 8.95200633e-02, 2.01042195e-01, 5.43067835e-01])
interval_list4 = np.array([3.20953367e-02, 3.54473564e-01, 2.00586240e-01, 1.56421222e-02,
       1.70700224e-01, 1.72043625e-01, 3.34953131e-01, 9.45904666e-03,
       2.39697701e-01, 3.04022500e-01, 3.12347174e-02, 1.25459081e+00,
       2.98588755e-02, 2.92556648e-01, 1.70158993e-01, 1.32964104e-01,
       7.13382019e-01, 1.97320568e-01, 2.97806777e-01, 5.36257434e-01,
       1.31648618e-02, 1.17489504e+00, 2.96549378e-02, 4.05724599e-01,
       6.51488469e-03, 4.71096926e-01, 2.68072136e-02, 4.49372044e-01,
       1.06972965e-01, 9.45368810e-02, 2.97569989e-01, 2.24200584e-02,
       1.22738879e-01, 4.49150560e-02, 1.10053582e-02, 4.77485330e-02,
       2.95300828e-01, 1.56084534e-01, 8.00218686e-02, 1.54818183e-01,
       8.35480694e-01, 1.38225329e-01, 3.03609661e-01, 1.18474296e-02,
       2.69907482e-01, 1.30742389e-02, 6.81222562e-01, 5.85676131e-02,
       6.90645928e-01, 1.13036432e-01, 4.13490313e-02, 1.45300993e-01,
       1.93601507e-01, 1.22527491e-01, 7.07469517e-03, 4.14297158e-02,
       4.87786240e-01, 3.45379572e-02, 2.63695930e-02, 1.97709759e-01,
       3.58754978e-01, 1.46563991e-01, 5.02232458e-01, 5.64047986e-02,
       1.22949753e-02, 1.68313692e-01, 2.77875122e-01, 3.02422782e-02,
       2.04934668e-01, 1.08569335e-01, 9.87664800e-02, 1.30147551e-02,
       2.65277261e-01, 2.87327538e-02, 7.04387309e-01, 1.08216418e-01,
       9.98923714e-02, 1.56686780e-01, 2.97954034e-02, 2.36310465e-01,
       3.77320604e-01, 1.98854802e-02, 9.48284103e-02, 4.73278120e-01,
       1.49899051e-01, 2.20788309e-03, 1.78845268e-01, 2.92353770e-01,
       5.67285883e-01, 1.00153896e-01, 8.68030930e-02, 5.26436994e-01,
       2.19063432e-01, 1.66861825e-01, 3.69879549e-02, 6.68452895e-04,
       3.99375203e-02, 6.09050251e-02, 4.29964373e-01, 6.13890139e-01,
       4.53661971e-02, 1.18804519e-01, 6.57731438e-01, 1.96520674e-01,
       4.56029637e-01, 2.93296819e-01, 4.47356621e-03, 5.71490929e-01,
       1.56004022e-01, 7.64044629e-02, 1.26446299e-01, 1.36460815e-03,
       4.01293210e-01, 1.22969823e-01, 9.41990278e-02, 3.59595135e-01,
       5.57225707e-02, 1.09441863e+00, 5.97921596e-01, 6.32121654e-01,
       6.60736725e-01, 5.51812981e-02, 8.44209745e-01, 2.12372656e-01,
       1.39042371e-01, 5.84177826e-02, 5.42286850e-01, 4.98836469e-01,
       1.10375194e-01, 2.50613478e-01, 1.24838566e-01, 3.27019968e-01,
       3.49191470e-01, 4.46185882e-01, 9.55123447e-02, 3.94428431e-01,
       5.75950674e-02, 6.85636162e-01, 8.51658653e-01, 1.27149894e-01,
       4.45907861e-02, 2.01872778e-01, 1.45178001e-01, 6.95900944e-01,
       9.95405642e-01, 2.42341969e-01, 9.97470375e-02, 2.66782820e-01,
       3.95698434e-02, 2.75139100e-01, 9.13620409e-03, 1.87130150e-01,
       4.48696661e-01, 1.83188390e-02, 9.23020852e-02, 3.08542276e-01,
       9.60444862e-02, 4.04353785e-02, 6.19353666e-02, 3.49150598e-01,
       1.68253661e-01, 8.18326069e-02, 4.22315411e-01, 1.57599302e-01,
       1.06511138e-01, 2.54049761e-01, 1.14582292e-01, 6.82814384e-01,
       3.43056870e-01, 1.08315805e-01, 1.44702476e-01, 5.90102425e-02,
       6.89222685e-02, 1.47031826e-01, 1.80411504e-02, 9.90510361e-02,
       9.01961421e-01, 2.42363721e-01, 1.43718908e-01, 2.58798528e-01,
       6.68122360e-01, 4.65966780e-01, 6.46977699e-02, 4.03452912e-03,
       2.07326553e-01, 7.00932899e-02, 8.07307041e-02, 2.52946873e-01,
       1.29404194e-01, 1.02124537e-01, 8.20735639e-02, 4.88447191e-01,
       4.54721996e-03, 3.27524429e-02, 1.19461503e-01, 7.90122678e-02,
       2.24530196e-01, 1.22440921e-01, 2.72121948e-01, 1.01751122e-01])
interval_list5 = np.array([2.53604312e-01, 6.79223166e-02, 1.70572742e-01, 1.81485254e-01,
       1.80933075e-01, 1.07007342e-01, 2.89679862e-01, 1.38818609e-01,
       4.84532680e-01, 6.01512482e-02, 1.39197765e-01, 4.97873545e-01,
       9.36875226e-02, 4.22329332e-02, 4.22918473e-01, 2.64217192e-01,
       1.04633883e-02, 7.77119258e-02, 5.25624223e-01, 2.77886743e-01,
       5.39984926e-01, 1.38011963e-01, 9.32253892e-02, 5.23564367e-01,
       2.63067204e-01, 4.67055780e-01, 7.80519732e-02, 3.14342929e-02,
       5.00474877e-02, 9.73253726e-05, 3.19174809e-01, 2.54147772e-02,
       1.08684475e-01, 9.57628317e-02, 2.79870780e-01, 1.12563928e-01,
       4.08903683e-03, 1.56632309e-02, 5.82823431e-02, 1.32027629e-02,
       1.56584354e-01, 7.15842613e-02, 9.41773158e-03, 3.03804516e-01,
       1.80056680e-01, 2.74437125e-01, 4.86928434e-02, 2.39144934e-01,
       7.10558195e-02, 3.74503497e-01, 4.32319655e-02, 2.94229235e-03,
       5.18680540e-01, 1.11963569e-01, 1.51256868e-01, 1.78977547e-01,
       2.76755729e-01, 1.22219079e-01, 1.82740591e-01, 1.53474133e-01,
       7.79141787e-02, 2.56182146e-02, 5.83651345e-02, 9.07615953e-02,
       9.24447943e-02, 4.41363580e-02, 9.37601417e-02, 2.42033195e-01,
       3.76593487e-01, 7.95994544e-02, 3.63234450e-01, 5.48519316e-01,
       2.14060698e-01, 2.44796571e-01, 1.37442954e-01, 2.33209271e-02,
       3.23084201e-01, 4.11394100e-01, 5.62992449e-02, 2.47464987e-01,
       3.48145676e-02, 8.23762090e-02, 2.35408638e-01, 1.66082961e-01,
       2.95618337e-01, 2.52081597e-01, 6.64714409e-01, 9.10036538e-02,
       3.15953221e-01, 9.23094974e-02, 6.46991600e-02, 5.34196043e-01,
       9.69845929e-02, 2.02794041e-01, 3.39402341e-02, 8.09745925e-02,
       1.84818425e-01, 2.74635171e-01, 2.73761136e-02, 2.82430405e-01,
       2.27761683e-01, 1.14357170e-01, 6.35352546e-03, 8.15303982e-01,
       8.65829015e-02, 5.65195195e-01, 1.19765949e-01, 8.36494984e-02,
       1.02168329e-02, 1.02598636e-01, 1.29155224e-01, 2.07700086e-01,
       4.62755195e-02, 1.03671633e-01, 2.03339567e-01, 3.89935463e-02,
       5.98088797e-02, 7.76485247e-02, 2.11820840e-01, 3.04102201e-01,
       2.98262888e-01, 6.37260393e-02, 2.02288762e-01, 4.70203260e-01,
       3.37401189e-01, 3.71948169e-01, 4.93698864e-02, 2.70339528e-01,
       7.26883887e-02, 4.04195056e-01, 3.81455910e-02, 2.91053312e-02,
       6.28547952e-02, 4.94881077e-01, 2.00638203e-01, 4.66241070e-02,
       6.75928153e-02, 4.66242880e-01, 5.20327041e-04, 1.60659851e-01,
       1.24037683e-01, 5.03266815e-02, 5.88221529e-02, 3.06195043e-02,
       4.28211616e-01, 1.80428026e-01, 2.70618047e-01, 2.33740889e-01,
       4.93859807e-01, 2.72033913e-01, 2.93595079e-01, 8.72450307e-02,
       8.78525209e-02, 5.66404713e-02, 1.65049766e-01, 6.86383666e-01,
       3.48931548e-01, 2.56050567e-01, 9.95720421e-03, 3.47507645e-01,
       1.10697093e+00, 6.68585567e-02, 3.55475953e-01, 9.07944936e-02,
       1.99760457e-01, 3.54400032e-01, 8.85425981e-02, 4.61914938e-03,
       2.58005833e-02, 1.41338889e-01, 1.17427090e-01, 1.94049876e-01,
       2.29508069e-01, 1.44799179e-01, 1.32026877e-01, 7.71358856e-02,
       5.51957017e-02, 1.48678888e-01, 3.97362469e-01, 4.03319793e-01,
       7.15449494e-02, 5.92913707e-01, 1.39107306e-01, 3.82234078e-01,
       5.48623276e-01, 6.01620969e-03, 1.91326550e-01, 3.11362727e-02,
       8.63525336e-03, 1.06542556e-03, 1.48106317e-01, 1.64202920e-01,
       4.14031770e-01, 6.68463244e-02, 1.24573093e-01, 1.60465447e-01,
       1.90937864e-02, 5.11362677e-01, 9.00503641e-01, 2.59559729e-02])
interval_list10 = np.array([4.49043117e-02, 5.84337811e-02, 1.25496013e-02, 3.48097989e-01,
       2.04335455e-02, 8.61545659e-02, 4.53800315e-02, 3.70314019e-03,
       1.45388133e-01, 9.96899147e-02, 1.30517831e-02, 9.14166903e-02,
       1.14799641e-01, 5.02895311e-02, 2.16481779e-02, 4.55211780e-02,
       3.09555358e-02, 8.50361219e-03, 8.17825882e-02, 1.90386983e-01,
       8.59222129e-03, 3.62860450e-01, 2.92370916e-01, 4.46160352e-02,
       2.31152279e-01, 1.11505941e-02, 5.61194053e-02, 1.70293295e-01,
       2.34661150e-01, 1.48693685e-01, 4.33616482e-02, 5.39573372e-02,
       1.47875935e-01, 6.69696035e-02, 1.41488766e-02, 1.65688474e-02,
       1.83756168e-02, 1.69998758e-01, 1.03366391e-01, 2.52366333e-02,
       6.29598817e-02, 6.33585540e-02, 3.19295829e-02, 3.64517316e-02,
       1.18031386e-02, 1.02220220e-01, 4.29088494e-02, 1.12234595e-01,
       9.26339701e-02, 7.72575749e-02, 1.04907052e-05, 2.17210522e-01,
       1.23287902e-01, 4.64777941e-02, 6.02609401e-03, 1.35041474e-01,
       4.43280029e-02, 1.70132772e-01, 1.48876943e-01, 1.00024281e-01,
       9.91428002e-03, 4.44198502e-02, 1.12122101e-01, 9.92521171e-03,
       1.36591686e-01, 8.71088174e-02, 5.17496096e-02, 7.20717527e-03,
       1.08769370e-01, 1.38477105e-01, 4.32096065e-01, 3.81710244e-02,
       5.88650165e-02, 1.12088033e-02, 4.33039338e-02, 2.15436152e-01,
       1.97289966e-01, 2.89207403e-02, 2.27838798e-01, 2.20027797e-01,
       2.43853619e-01, 1.50908640e-01, 2.97930731e-02, 8.31267641e-02,
       5.17800900e-02, 5.67089329e-02, 3.73475831e-02, 2.12836797e-02,
       1.43508065e-01, 6.31209997e-02, 3.73111849e-02, 3.76937058e-02,
       3.99612398e-01, 3.57133148e-01, 4.18067363e-02, 4.00798653e-01,
       1.80549014e-01, 6.04406648e-02, 1.25164562e-01, 1.76415569e-01,
       5.01480603e-02, 2.60010286e-02, 1.00330259e-01, 1.48080422e-01,
       6.40346021e-02, 5.70538886e-02, 3.21292754e-02, 4.35015219e-02,
       2.49327437e-02, 3.60693161e-02, 1.11298755e-02, 1.01412758e-01,
       1.41589027e-01, 1.48448846e-02, 5.33919271e-02, 1.74569355e-01,
       1.66719696e-01, 5.10722569e-02, 1.09860414e-01, 7.03765155e-02,
       4.19040117e-03, 1.00218841e-01, 7.44563525e-02, 9.82693465e-02,
       7.68873387e-02, 1.95272742e-01, 2.88446914e-02, 1.78636197e-01,
       4.90055520e-02, 9.95070178e-02, 7.24897179e-02, 2.91320312e-01,
       2.48165499e-02, 7.45189316e-03, 1.40157955e-01, 2.73090045e-01,
       3.82656316e-02, 3.90410672e-02, 9.15868053e-02, 6.31969196e-02,
       8.31003096e-02, 2.37808329e-02, 2.80451900e-02, 2.99855838e-02,
       5.29235814e-02, 1.72838979e-02, 5.01013470e-02, 6.43026477e-02,
       2.55069397e-01, 3.35220758e-01, 8.14937432e-03, 1.16611352e-01,
       7.59630257e-02, 1.41952596e-01, 3.56022255e-02, 1.28036998e-02,
       6.48417769e-03, 2.13534235e-01, 1.66248853e-01, 5.27129334e-01,
       1.14600752e-01, 9.16461432e-04, 8.77277091e-02, 1.49667920e-02,
       3.87584198e-02, 3.59074855e-02, 1.69552325e-02, 2.44623600e-02,
       5.85471374e-02, 2.76736746e-01, 1.41172801e-01, 3.26748516e-02,
       8.83560134e-03, 2.60243522e-02, 1.54405166e-01, 8.38493897e-02,
       1.16456703e-01, 1.05173994e-02, 3.07508930e-01, 5.25578793e-03,
       1.70253158e-01, 2.44866255e-02, 4.65362648e-02, 5.23727708e-02,
       4.07947826e-02, 1.19761450e-01, 1.26318593e-01, 3.08526014e-01,
       1.17154149e-03, 1.44408719e-01, 1.68589860e-02, 2.52564832e-02,
       2.73203250e-03, 2.27234186e-02, 2.78019029e-02, 1.67418909e-01,
       2.27158921e-02, 2.48223285e-01, 5.15403668e-02, 7.23522035e-02])
interval_list6 = np.array([0.01398832, 0.11208973, 0.14069587, 0.07523015, 0.04931263,
       0.45806059, 0.46027306, 0.31732483, 0.01432191, 0.04655658,
       0.0203927 , 0.14806501, 0.06821454, 0.02663193, 0.07110267,
       0.11234191, 0.02945624, 0.21758617, 0.00483551, 0.13985582,
       0.02521473, 0.12859448, 0.17172703, 0.10539373, 0.16585303,
       0.12036645, 0.24570022, 0.02063276, 0.36718123, 0.26222627,
       0.12989565, 0.19860756, 0.01050164, 0.09983944, 0.01183498,
       0.10405406, 0.01814768, 0.06738915, 0.12219627, 0.06925563,
       0.10812765, 0.04303423, 0.12953736, 0.00419919, 0.21252447,
       0.03760368, 0.1810248 , 0.04854551, 0.07625995, 0.04868127,
       0.08796053, 0.19063851, 0.68360853, 0.18668332, 0.15482095,
       0.15659585, 0.0201001 , 0.22484912, 0.06955822, 0.13019903,
       0.10405365, 0.03928714, 0.10839966, 0.12405755, 0.0064382 ,
       0.22662837, 0.11233911, 0.02914401, 0.20355372, 0.0875305 ,
       0.09043156, 0.02627969, 0.44186627, 0.7073643 , 0.20312485,
       0.15631953, 0.17793779, 0.3216647 , 0.24820434, 0.58083993,
       0.07761704, 0.17181409, 1.2226816 , 0.17938386, 0.63935308,
       0.01131975, 0.37429767, 0.05154282, 0.05152456, 0.02425022,
       0.0284337 , 0.05245183, 0.32221904, 0.39136311, 0.22096018,
       0.01840546, 0.0183966 , 0.01378317, 0.1721056 , 0.33544696,
       0.09486078, 0.14474396, 0.00797286, 0.2054827 , 0.05826672,
       0.01310461, 0.13601739, 0.23568883, 0.18930013, 0.41317128,
       0.19155986, 0.01573129, 0.01000001, 0.28443772, 0.08415093,
       0.20433143, 0.06496336, 0.11139728, 0.16001277, 0.10426383,
       0.08891912, 0.02432304, 0.23354497, 0.33679024, 0.23899551,
       0.22762741, 0.04637331, 0.04824244, 0.05012417, 0.04061572,
       0.08107145, 0.06991086, 0.08943191, 0.15028385, 0.02025971,
       0.09466714, 0.20713222, 0.23733841, 0.32470117, 0.03426012,
       0.0405739 , 0.05079778, 0.12374714, 0.03845794, 0.01387486,
       0.00163205, 0.14714157, 0.12961851, 0.07910441, 0.07877913,
       0.16639768, 0.14574115, 0.04719109, 0.01499938, 0.0288494 ,
       0.02449651, 0.14361992, 0.04766205, 0.05857472, 0.1980234 ,
       0.0979435 , 0.11956627, 0.2359094 , 0.75316149, 0.16027679,
       0.00224452, 0.23108132, 0.35019598, 0.24423924, 0.4557186 ,
       0.3938945 , 0.06915031, 0.15958477, 0.07980454, 0.25168624,
       0.00190389, 0.03908051, 0.05912175, 0.54540978, 0.10874978,
       0.05919023, 0.08100152, 0.03731421, 0.07863609, 0.26855861,
       0.25431859, 0.00294583, 0.02993799, 0.32141919, 0.09867228,
       0.45284725, 0.05672   , 0.14745214, 0.20221733, 0.1002915 ,
       0.02646669, 0.23568988, 0.0082339 , 0.31174063, 0.31642924])
interval_list8 = np.array([0.1862097 , 0.02730461, 0.39361505, 0.08717932, 0.02952353,
       0.43632322, 0.08641219, 0.05430843, 0.41868104, 0.02247407,
       0.13683197, 0.11111462, 0.02524843, 0.08023149, 0.02727424,
       0.1687902 , 0.38324787, 0.03513098, 0.05842871, 0.3175948 ,
       0.07874211, 0.09404937, 0.08447883, 0.21065709, 0.02514623,
       0.0478523 , 0.06561291, 0.02996663, 0.11935625, 0.02570733,
       0.11083874, 0.09609642, 0.04401113, 0.11072104, 0.03852754,
       0.0217343 , 0.19024827, 0.0136653 , 0.10538929, 0.03952805,
       0.05543521, 0.25643461, 0.15559394, 0.03678975, 0.11961005,
       0.03782847, 0.26699326, 0.22463288, 0.09794507, 0.01820102,
       0.04405272, 0.02660608, 0.00580979, 0.17975523, 0.09759915,
       0.21277443, 0.00155147, 0.05874434, 0.007735  , 0.03711558,
       0.03723975, 0.01502338, 0.29189507, 0.17965361, 0.15559183,
       0.09048042, 0.3519288 , 0.21661612, 0.08980452, 0.05182396,
       0.01306856, 0.004575  , 0.4853741 , 0.22742804, 0.12741319,
       0.15201566, 0.31698487, 0.07276631, 0.00295231, 0.22619163,
       0.00096481, 0.06824387, 0.19494785, 0.07207573, 0.03219408,
       0.03244039, 0.10304746, 0.18503611, 0.14695355, 0.13700132,
       0.00102798, 0.01174386, 0.06069211, 0.03671145, 0.01345337,
       0.09074342, 0.01451974, 0.68517649, 0.128591  , 0.0898562 ,
       0.10315935, 0.14796187, 0.03963618, 0.0502286 , 0.0044235 ,
       0.05395696, 0.29820443, 0.09072287, 0.07840358, 0.20197021,
       0.16368925, 0.0890925 , 0.0168    , 0.00686952, 0.01407355,
       0.04914028, 0.07277576, 0.05425877, 0.08586115, 0.11596333,
       0.0530153 , 0.16568004, 0.01029983, 0.28443825, 0.00121677,
       0.03750394, 0.08810559, 0.0598518 , 0.24293513, 0.01315584,
       0.01567631, 0.10229666, 0.10246432, 0.18267677, 0.01531646,
       0.05064543, 0.01448027, 0.04234892, 0.00436181, 0.02643067,
       0.25621985, 0.29214148, 0.56223383, 0.0326306 , 0.28414996,
       0.02504973, 0.0373191 , 0.14261511, 0.10837059, 0.02587404,
       0.11144282, 0.31783216, 0.12500855, 0.00555624, 0.08700265,
       0.06172951, 0.03241188, 0.1655446 , 0.22844931, 0.07993212,
       0.08357244, 0.14594418, 0.15307731, 0.09463545, 0.03260791,
       0.27113699, 0.14873122, 0.07260828, 0.06733099, 0.12292614,
       0.06630189, 0.18339979, 0.03386133, 0.02908328, 0.13842035,
       0.04468794, 0.01960371, 0.15902822, 0.11885965, 0.13064692,
       0.095107  , 0.55887647, 0.01185124, 0.2936661 , 0.36367423,
       0.00496877, 0.0082887 , 0.26864479, 0.03276885, 0.04696173,
       0.09826745, 0.02554367, 0.21948503, 0.15520667, 0.14069264,
       0.26246102, 0.05811752, 0.02167482, 0.09055146, 0.05070841])
interval_dict = {
    1: interval_list1,
    2: interval_list2,
    3: interval_list3,
    4: interval_list4,
    5: interval_list5,
    6: interval_list6,
    8: interval_list8,
    10: interval_list10
}

# interval_list = np.random.exponential(0.3, 200)       # 模拟每个DAG之间的时间间隔 size=200
# request_list = np.random.randint(0, NUM_AGENTS, size=200)   # 每个请求从哪个服务器发出 size=200

class ScheduleEnv():
    def __init__(self):
        super(ScheduleEnv, self).__init__()
        self.state = [0 for i in range(NUM_AGENTS)] # initialize the current state and will keep updating it in the step function
        self.env_avail_actions = self.get_avail_actions_env()
        self.n_actions = len(self.env_avail_actions)
        self.agents = NUM_AGENTS
        self.reset()
        
    def reset(self):
        # Reset the environment to its initial state
        # Return the initial observation
        for agent_i in range(self.agents):  
            self.state[agent_i] = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, capacity, 0, -1])        # 每个服务器的缓存，剩余空间，空闲时间戳,当前时间戳
        return self.get_state()
        
    def get_info(self):
        return {
            'state_shape': self.agents * 13,
            'action_shape': 5,
            'n_actions': self.n_actions,
            'n_agents': self.agents,
            'episode_limit': 40
        }
    
    def get_state(self):
        # return np.copy(self.state)
        return copy.deepcopy(self.state)
    
    def get_avail_actions_env(self):
        avail_actions_env = []
        for i in range(2**5):
            binary = bin(i)[2:].zfill(5)
            action = [int(x) for x in binary]
            if sum(action) <= capacity:
                avail_actions_env.append(action)
        return avail_actions_env  # 26个基本动作 从不超过capacity个1的动作里选

    def get_masked_actions(self, state):
        state_np = state.cpu().numpy()
        num = len(state_np)
        mask = np.zeros((num, self.n_actions))
        for i in range(len(state_np)):
            avail_action = np.where(state_np[i][5:10] == 1, 1, 0)  # 强制保留
            
            if sum(avail_action) == 0:
                mask[i] = [1 for i in range(self.n_actions)]
            else:
                place_index = np.where(avail_action == 1)[0]
                avail_actions = [k for k, action in enumerate(self.env_avail_actions) if all(action[j] == 1 for j in place_index)]
                mask[i] = [1 if t in avail_actions else 0 for t in range(self.n_actions)]
        mask_tensor = torch.tensor(mask).cuda()
        return mask_tensor   # [1,0,...] 1 indicates the action is available whlie 0 indicates the action is unavailable
    
    def step(self, actions):  # 根据当前obs 执行actions之后，返回obs和state  不是这个时隙执行之后的 只是执行动作立刻得到的因为obs会变
        # actions:[[0,0,xxx,1,0,0],[0,xxx,1,0,0,0],[0,0,xxx,1,0,0]] list[np,np,np]
        # Return the new observations, rewards, dones
        state = self.get_state()
        migration = []
        # hiring_cost = 0
        reward = [0 for i in range(self.agents)]
        for agent_id in range(self.agents):
            action = self.env_avail_actions[np.where(actions[agent_id] == 1)[0][0]]
            # action = [0,0,0,0,0]
            state[agent_id][0:5] = action
            state[agent_id][5:10] = [0,0,0,0,0]
            state[agent_id][10] = capacity - sum(action)
            migration.append([1 if (y_1 == 1 and y_2 == 0) else 0 for y_1, y_2 in zip(state[agent_id][0:5], self.state[agent_id][0:5])])  # [[0,1,1..]]
            state[agent_id][11] = self.state[agent_id][11]
            state[agent_id][12] += 1
            # hiring_cost += Gamma * sum(action * service_size * TIME_STAMP / 1000)
        # migration_cost = sum(sum(migration[i] * service_size * mu_c) for i in range(self.agents))
        
        # 有DAG结束判断是否超出deadline 在调度过程中给出
        # reward = -(w_1 * migration_cost + w_2 * hiring_cost)
        done = [False for i in range(self.agents)]
        self.state = state
        return state, reward, done
    
    
    
    # 只有obs state action_onehot才必须用numpy tensor表示 因为需要进入网络 别的都用list即可
